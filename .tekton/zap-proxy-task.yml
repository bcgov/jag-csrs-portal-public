apiVersion: tekton.dev/v1beta1
# Push this from GitHub Actions to OpenShift as SecOps wants private site to be scanned
# Too
# Adjuting the GitHub Action Equivalent one to work with Private repo
# Would either need writing custom actions or self hosted OpenShift Runner
# That route did not go smoothly yet; hence took the Tekton route
# Have to add nice html report options and scheduled execution

  name: zap-proxy
  namespace: blahblah-projectlicenseplate-tools

spec:
  params:
    - default: zap-scan
      name: APPLICATION_NAME
      type: string
    - description: The application under test url
      name: APP_URL
      type: string
    - description: Directory to start build in (handle multiple branches)
      name: WORK_DIRECTORY
      type: string
  steps:
    - env:
        - name: PIPELINERUN_NAME
          valueFrom:
            fieldRef:
              fieldPath: 'metadata.labels[''tekton.dev/pipelineRun'']'
      image: 'quay.io/eformat/zap2docker-bare:latest'
      name: zap-proxy
      resources: {}
      # Printing output in command line for now
      script: "#!/usr/bin/env bash\nset -x\necho \"Make the wrk directory available to save the reports\"\ncd /zap\nmkdir -p /zap/wrk  && mkdir -p /zap/wrk/allure-results\necho \"\U0001FAB0\U0001FAB0\U0001FAB0 Starting the pen test...\"\n/zap/zap-baseline.py -t $(params.APP_URL) -r $PIPELINERUN_NAME.html\nls -lart /zap/wrk\necho \"\U0001F6F8\U0001F6F8\U0001F6F8 Saving results...\"\n# FIXME for now this works, move to script+image\npip install pytest allure-pytest --user\ncat > test.py <<EOF\nimport allure\nimport glob\nimport os\ndef test_zap_scan_results():\n    for file in list(glob.glob('/zap/wrk/*.html')):\n        allure.attach.file(file, attachment_type=allure.attachment_type.HTML)\n    pass\nEOF\n \n"
      workingDir: /zap/wrk
  workspaces:
    - name: output
