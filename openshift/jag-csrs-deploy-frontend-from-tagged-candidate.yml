# For test and prod
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${COMPONENT_NAME}
  description: Deployment template for the JAG-csrs Frontend

labels:
  app: ${COMPONENT_NAME}
  app.kubernetes.io/name: ${COMPONENT_NAME}
  app.kubernetes.io/part-of: ${APP_NAME}


parameters:

- name: APP_NAME
  description: The application name that each component is part of
  required: true
  value: jag-csrs

- name: SPLUNK_CONFIG_NAME
  description: The application name that each component is part of
  required: true
  value: blahblah

- name: ROUTE_PREFIX
  description: The application name that each component is part of
  required: true
  value: jag-csrs-portal-public

- name: COMPONENT_NAME
  description: The component name
  required: true
  value: jag-csrs-frontend

- name: API_COMPONENT_NAME
  description: The API component name
  required: true
  value: jag-csrs-api

- name: OC_NAMESPACE
  description: The OpenShift namespace prefix
  required: true
  # Below value must be changed as per gold cluster oc nameplate
  value: blahblah

- name: OC_ENV
  description: The OpenShift environment, ie dev, test or prod
  required: true
  value: test

- name: DNS
  description: The application name that each component is part of
  required: false
  value: apps.silver.devops.gov.bc.ca

- name: BCEID_URL
  description: BCEID_URL for dev, test or prod
  required: true
  value: https://www.test.bceid.ca/

- name: IMAGE_TAG
  description: Tagged code for test or prod
  required: true
  value: blahblah

- name: NODE_ENV 
  description: dev, test or prod indicator; use development for DEV and TEST
  # use production 
  required: true
  value: development

objects:

### JAG-csrs Deployment Config ###
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${COMPONENT_NAME}
    namespace: ${OC_NAMESPACE}-${OC_ENV}

  spec:
    completionDeadlineSeconds: 1200
    replicas: 1
    selector:
      name: ${COMPONENT_NAME}
    strategy:
      type: Rolling
      maxSurge: 50%
      maxUnavailable: 0
    template:
      metadata:
        labels:
          name: ${COMPONENT_NAME}
          app.kubernetes.io/instance: ${COMPONENT_NAME}
          app.openshift.io/runtime: angularjs
          version: vblahblah
      spec:
        volumes:
          - name: volume-oidc-config
            configMap:
              name: oidc-config
              defaultMode: 420
          - name: nginx-config
            configMap:
              name: childcarerecalc-config
          - name: frontend-app-config
            configMap:
              name: frontend-app-config
              defaultMode: 420
        containers:
          - image: >-
              image-registry.openshift-image-registry.svc:5000/${OC_NAMESPACE}-tools/${COMPONENT_NAME}:${OC_ENV}
            name: ${COMPONENT_NAME}
            imagePullPolicy: Always
            restartPolicy: Always
            terminationGracePeriodSeconds: 30

            terminationMessagePolicy: File
            ports:
              - containerPort: 8080
            env:
            - name: SPLUNK_URL
              valueFrom:
                secretKeyRef:
                  name: ${SPLUNK_CONFIG_NAME}
                  key: SPLUNK_URL
            - name: SPLUNK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: ${SPLUNK_CONFIG_NAME}
                  key: SPLUNK_TOKEN
            - name: SPLUNK_INDEX
              valueFrom:
                secretKeyRef:
                  name: ${SPLUNK_CONFIG_NAME}
                  key: SPLUNK_INDEX
            - name: NODE_ENV
              value: ${NODE_ENV}
            resources:
              limits:
                cpu: 1000m
                memory: 4000Mi
              requests:
                cpu: 500m
                memory: 1000Mi
            volumeMounts:
              - name: frontend-app-config
                mountPath: /usr/share/nginx/html/assets/config/app.config.json
                subPath: app.config.json
              - name: volume-oidc-config
                mountPath: /usr/share/nginx/html/assets/config/oidc.json
                subPath: oidc.json
              - name: nginx-config
                mountPath: /etc/nginx/nginx.conf
                subPath: nginx.conf
            # Took away readiness and liveness probe until those end points are ready
    # Would trigger deployment from GitHub Actions by using dc patch
    # Hence taking out the following trigger would make sense
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${COMPONENT_NAME}
          from:
            kind: ImageStreamTag
            namespace: ${OC_NAMESPACE}-tools
            name: ${COMPONENT_NAME}:${OC_ENV}
  status: {}



### JAG-csrs Service ###
- apiVersion: v1
  kind: Service
  metadata:
    name: ${COMPONENT_NAME}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
  spec:
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 8080
    selector:
      name: ${COMPONENT_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${ROUTE_PREFIX}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
  annotations:
    # if we do not use sticky-session, disable_cookies needs to be true
    haproxy.router.openshift.io/disable_cookies: "true"
    # balance algorithm
    haproxy.router.openshift.io/balance: roundrobin
    # Needed only for DEV and TEST to restrict traffic temporarily
    haproxy.router.openshift.io/ip_whitelist: ${CIDR_NOTATION}
  spec:
    host: ${DNS}
    #${ROUTE_PREFIX}-${OC_NAMESPACE}-${OC_ENV}.${DNS}
    to:
      kind: Service
      name: ${COMPONENT_NAME}
    port:
     targetPort: http
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
      # Volume mount of secret on route Not allowed yet https://stackoverflow.com/a/62571080
      # However we can do variable substitution in template https://stackoverflow.com/a/69002769
      certificate: ${CERT}
      key: ${KEY}
    wildcardPolicy: None
