// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Csrs.Interfaces.Dynamics.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Body
    {
        /// <summary>
        /// Initializes a new instance of the Body class.
        /// </summary>
        public Body()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Body class.
        /// </summary>
        public Body(string optionSetName = default(string), string attributeLogicalName = default(string), string entityLogicalName = default(string), int? value = default(int?), object label = default(object), object description = default(object), bool? mergeLabels = default(bool?), int? defaultStatusCode = default(int?))
        {
            OptionSetName = optionSetName;
            AttributeLogicalName = attributeLogicalName;
            EntityLogicalName = entityLogicalName;
            Value = value;
            Label = label;
            Description = description;
            MergeLabels = mergeLabels;
            DefaultStatusCode = defaultStatusCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OptionSetName")]
        public string OptionSetName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttributeLogicalName")]
        public string AttributeLogicalName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EntityLogicalName")]
        public string EntityLogicalName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Value")]
        public int? Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Label")]
        public object Label { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public object Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MergeLabels")]
        public bool? MergeLabels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultStatusCode")]
        public int? DefaultStatusCode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Value != null)
            {
                if (Value > 2147483647)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "Value", 2147483647);
                }
                if (Value < -2147483648)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "Value", -2147483648);
                }
            }
            if (DefaultStatusCode != null)
            {
                if (DefaultStatusCode > 2147483647)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "DefaultStatusCode", 2147483647);
                }
                if (DefaultStatusCode < -2147483648)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "DefaultStatusCode", -2147483648);
                }
            }
        }
    }
}
