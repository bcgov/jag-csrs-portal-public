#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src

ARG SOURCE_REVISION_ID=unknown
ENV SOURCE_REVISION_ID=$SOURCE_REVISION_ID

COPY ["Csrs.Services.FileManager/Csrs.Services.FileManager.csproj", "Csrs.Services.FileManager/"]
COPY ["Csrs.Interfaces.SharePoint/SharePoint.csproj", "Csrs.Interfaces.SharePoint/"]
RUN dotnet restore "Csrs.Services.FileManager/Csrs.Services.FileManager.csproj"
COPY . .
WORKDIR "/src/Csrs.Services.FileManager"
# Pass commit SHA into build
RUN dotnet build "Csrs.Services.FileManager.csproj" -c Release -o /app/build \
    /p:SourceRevisionId=$SOURCE_REVISION_ID

FROM build AS publish
RUN dotnet publish "Csrs.Services.FileManager.csproj" -c Release -o /app/publish \
    /p:SourceRevisionId=$SOURCE_REVISION_ID

# For fixing some of the vulnerabilities for CSRS-448
FROM registry.access.redhat.com/ubi8/dotnet-60-runtime:6.0-17.20220907105939 AS final
USER 0
RUN  rpm -e --nodeps expat && \
     rpm -e --nodeps vim-minimal
USER 1001
WORKDIR /opt/app-root/app
EXPOSE 8080
COPY --from=publish /app/publish .

# The SHA is available to your app as an env variable
ENV SOURCE_REVISION_ID=$SOURCE_REVISION_ID

ENTRYPOINT ["dotnet", "Csrs.Services.FileManager.dll"]
