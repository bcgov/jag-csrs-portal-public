//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
using System;
using System.Text.Json.Serialization;

#nullable enable

namespace Csrs.Api.Models.Dynamics
{

    public abstract class Entity
    {
        /// <summary>
        /// Backing field for the primary id attribute.
        /// </summary>
        protected Guid _id;

        /// <summary>
        /// Primary id alias
        /// </summary>
        public abstract Guid Id { get; set; }

        /// <summary>
        /// Logical name statecode.
        /// </summary>
        [JsonPropertyName("statecode")]
        public int StateCode { get; set; }

        /// <summary>
        /// Logical name statuscode.
        /// </summary>
        [JsonPropertyName("statuscode")]
        public int StatusCode { get; set; }
    }

    /// <summary>
    /// Background entity to capture levels of BC Courts - used to filter BC Court lookup on CSRS File. Logical name ssg_csrsbccourtlevel.
    /// </summary>
    public partial class SSG_CsrsBCCourtLevel : Entity
    {
        public const string EntityLogicalName = "ssg_csrsbccourtlevel";

        /// <summary>
        /// The label for the court level. Logical name ssg_courtlevellabel.
        /// </summary>
        [JsonPropertyName("ssg_courtlevellabel")]
        public string? CourtLevel { get; set; }

        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrsbccourtlevelid.
        /// </summary>
        /// <returns>
        /// The primary id value or <see cref="System.Guid.Empty"/> if not set.
        /// </returns>
        [JsonPropertyName("ssg_csrsbccourtlevelid")]
        public System.Guid? csrsbccourtlevelId 
        {
            get { return _id; }
            set { _id = value.HasValue ? value.Value : System.Guid.Empty; }
        }

        /// <summary>
        /// Primary Id alias. Logical name ssg_csrsbccourtlevelid.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public override Guid Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// Contains all the attributes/columns on this class.
        /// </summary>
        public static readonly System.Linq.Expressions.Expression<Func<SSG_CsrsBCCourtLevel, object>> AllProperties = _ => new { _.CourtLevel, _.csrsbccourtlevelId, _.StateCode, _.StatusCode };

        /// <summary>
        /// Contains all the normal attributes on this entity.
        /// </summary>
        public static class Attributes
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridtype = "owneridtype";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string ssg_courtlevellabel = "ssg_courtlevellabel";
            public const string ssg_csrsbccourtlevelid = "ssg_csrsbccourtlevelid";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }
        /// <summary>
        /// Contains all the attributes that represent a one to many relationship.
        /// These attributes will be a collection on this entity.
        /// </summary>
        public static class OneToManyRelationships
        {
            public const string ssg_csrsbccourtlevel_AsyncOperations = "ssg_csrsbccourtlevel_AsyncOperations";
            public const string ssg_csrsbccourtlevel_BulkDeleteFailures = "ssg_csrsbccourtlevel_BulkDeleteFailures";
            public const string ssg_csrsbccourtlevel_DuplicateBaseRecord = "ssg_csrsbccourtlevel_DuplicateBaseRecord";
            public const string ssg_csrsbccourtlevel_DuplicateMatchingRecord = "ssg_csrsbccourtlevel_DuplicateMatchingRecord";
            public const string ssg_csrsbccourtlevel_MailboxTrackingFolders = "ssg_csrsbccourtlevel_MailboxTrackingFolders";
            public const string ssg_csrsbccourtlevel_PrincipalObjectAttributeAccesses = "ssg_csrsbccourtlevel_PrincipalObjectAttributeAccesses";
            public const string ssg_csrsbccourtlevel_ProcessSession = "ssg_csrsbccourtlevel_ProcessSession";
            public const string ssg_csrsbccourtlevel_ssg_csrsfile_BCCourtLevel = "ssg_csrsbccourtlevel_ssg_csrsfile_BCCourtLevel";
            public const string ssg_csrsbccourtlevel_ssg_ijssbccourtlocation_CSRSCourtLevelFilter = "ssg_csrsbccourtlevel_ssg_ijssbccourtlocation_CSRSCourtLevelFilter";
            public const string ssg_csrsbccourtlevel_SyncErrors = "ssg_csrsbccourtlevel_SyncErrors";
            public const string ssg_csrsbccourtlevel_UserEntityInstanceDatas = "ssg_csrsbccourtlevel_UserEntityInstanceDatas";
        }
        /// <summary>
        /// Contains all the attributes that represent a many to one relationship.
        /// These attributes will be a single instance on this entity.
        /// </summary>
        public static class ManyToOneRelationships
        {
            public const string business_unit_ssg_csrsbccourtlevel = "business_unit_ssg_csrsbccourtlevel";
            public const string lk_ssg_csrsbccourtlevel_createdby = "lk_ssg_csrsbccourtlevel_createdby";
            public const string lk_ssg_csrsbccourtlevel_createdonbehalfby = "lk_ssg_csrsbccourtlevel_createdonbehalfby";
            public const string lk_ssg_csrsbccourtlevel_modifiedby = "lk_ssg_csrsbccourtlevel_modifiedby";
            public const string lk_ssg_csrsbccourtlevel_modifiedonbehalfby = "lk_ssg_csrsbccourtlevel_modifiedonbehalfby";
            public const string owner_ssg_csrsbccourtlevel = "owner_ssg_csrsbccourtlevel";
            public const string team_ssg_csrsbccourtlevel = "team_ssg_csrsbccourtlevel";
            public const string user_ssg_csrsbccourtlevel = "user_ssg_csrsbccourtlevel";
        }
    }

    /// <summary>
    /// Child Support Recalculation System children records. Logical name ssg_csrschild.
    /// </summary>
    public partial class SSG_CsrsChild : Entity
    {
        public const string EntityLogicalName = "ssg_csrschild";

        /// <summary>
        /// Logical name ssg_childatageofmajority.
        /// </summary>
        [JsonPropertyName("ssg_childatageofmajority")]
        public bool? ChildatAgeofMajority { get; set; }

        /// <summary>
        /// Indicate whether the child is still a dependent. Logical name ssg_childisadependent.
        /// </summary>
        [JsonPropertyName("ssg_childisadependent")]
        public string? ChildIsADependent { get; set; }

        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrschildid.
        /// </summary>
        /// <returns>
        /// The primary id value or <see cref="System.Guid.Empty"/> if not set.
        /// </returns>
        [JsonPropertyName("ssg_csrschildid")]
        public System.Guid? ChildId 
        {
            get { return _id; }
            set { _id = value.HasValue ? value.Value : System.Guid.Empty; }
        }

        /// <summary>
        /// Primary Id alias. Logical name ssg_csrschildid.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public override Guid Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// Logical name ssg_dateofbirth.
        /// </summary>
        [JsonPropertyName("ssg_dateofbirth")]
        public DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// Logical name ssg_filenumber.
        /// </summary>
        [JsonPropertyName("ssg_filenumber")]
        public SSG_CsrsFile? FileNumber { get; set; }

        /// <summary>
        /// Logical name ssg_firstname.
        /// </summary>
        [JsonPropertyName("ssg_firstname")]
        public string? FirstName { get; set; }

        /// <summary>
        /// Logical name ssg_lastname.
        /// </summary>
        [JsonPropertyName("ssg_lastname")]
        public string? LastName { get; set; }

        /// <summary>
        /// Logical name ssg_middlename.
        /// </summary>
        [JsonPropertyName("ssg_middlename")]
        public string? MiddleName { get; set; }

        /// <summary>
        /// Contains all the attributes/columns on this class.
        /// </summary>
        public static readonly System.Linq.Expressions.Expression<Func<SSG_CsrsChild, object>> AllProperties = _ => new { _.ChildatAgeofMajority, _.ChildIsADependent, _.ChildId, _.DateOfBirth, _.FileNumber, _.FirstName, _.LastName, _.MiddleName, _.StateCode, _.StatusCode };

        /// <summary>
        /// Contains all the normal attributes on this entity.
        /// </summary>
        public static class Attributes
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridtype = "owneridtype";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string ssg_childatageofmajority = "ssg_childatageofmajority";
            public const string ssg_childatageofmajorityname = "ssg_childatageofmajorityname";
            public const string ssg_childisadependent = "ssg_childisadependent";
            public const string ssg_childisadependentname = "ssg_childisadependentname";
            public const string ssg_childsfather = "ssg_childsfather";
            public const string ssg_childsfathername = "ssg_childsfathername";
            public const string ssg_childsmother = "ssg_childsmother";
            public const string ssg_childsmothername = "ssg_childsmothername";
            public const string ssg_csrschildid = "ssg_csrschildid";
            public const string ssg_dateofbirth = "ssg_dateofbirth";
            public const string ssg_filenumber = "ssg_filenumber";
            public const string ssg_filenumbername = "ssg_filenumbername";
            public const string ssg_firstname = "ssg_firstname";
            public const string ssg_fullname = "ssg_fullname";
            public const string ssg_lastname = "ssg_lastname";
            public const string ssg_middlename = "ssg_middlename";
            public const string ssg_triggerrecalcrelationship = "ssg_triggerrecalcrelationship";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }
        /// <summary>
        /// Contains all the attributes that represent a one to many relationship.
        /// These attributes will be a collection on this entity.
        /// </summary>
        public static class OneToManyRelationships
        {
            public const string ssg_csrschild_AsyncOperations = "ssg_csrschild_AsyncOperations";
            public const string ssg_csrschild_BulkDeleteFailures = "ssg_csrschild_BulkDeleteFailures";
            public const string ssg_csrschild_DuplicateBaseRecord = "ssg_csrschild_DuplicateBaseRecord";
            public const string ssg_csrschild_DuplicateMatchingRecord = "ssg_csrschild_DuplicateMatchingRecord";
            public const string ssg_csrschild_MailboxTrackingFolders = "ssg_csrschild_MailboxTrackingFolders";
            public const string ssg_csrschild_PrincipalObjectAttributeAccesses = "ssg_csrschild_PrincipalObjectAttributeAccesses";
            public const string ssg_csrschild_ProcessSession = "ssg_csrschild_ProcessSession";
            public const string ssg_csrschild_SharePointDocumentLocations = "ssg_csrschild_SharePointDocumentLocations";
            public const string ssg_csrschild_SharePointDocuments = "ssg_csrschild_SharePointDocuments";
            public const string ssg_csrschild_SyncErrors = "ssg_csrschild_SyncErrors";
            public const string ssg_csrschild_UserEntityInstanceDatas = "ssg_csrschild_UserEntityInstanceDatas";
        }
        /// <summary>
        /// Contains all the attributes that represent a many to one relationship.
        /// These attributes will be a single instance on this entity.
        /// </summary>
        public static class ManyToOneRelationships
        {
            public const string business_unit_ssg_csrschild = "business_unit_ssg_csrschild";
            public const string lk_ssg_csrschild_createdby = "lk_ssg_csrschild_createdby";
            public const string lk_ssg_csrschild_createdonbehalfby = "lk_ssg_csrschild_createdonbehalfby";
            public const string lk_ssg_csrschild_modifiedby = "lk_ssg_csrschild_modifiedby";
            public const string lk_ssg_csrschild_modifiedonbehalfby = "lk_ssg_csrschild_modifiedonbehalfby";
            public const string owner_ssg_csrschild = "owner_ssg_csrschild";
            public const string ssg_csrsfile_ssg_csrschild_ChildsFileNumber = "ssg_csrsfile_ssg_csrschild_ChildsFileNumber";
            public const string ssg_csrsparty_ssg_csrschild_ChildsFather = "ssg_csrsparty_ssg_csrschild_ChildsFather";
            public const string ssg_csrsparty_ssg_csrschild_Mother = "ssg_csrsparty_ssg_csrschild_Mother";
            public const string team_ssg_csrschild = "team_ssg_csrschild";
            public const string user_ssg_csrschild = "user_ssg_csrschild";
        }
    }

    /// <summary>
    /// Logical name ssg_csrsfeedback.
    /// </summary>
    public partial class SSG_CsrsFeedback : Entity
    {
        public const string EntityLogicalName = "ssg_csrsfeedback";

        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrsfeedbackid.
        /// </summary>
        /// <returns>
        /// The primary id value or <see cref="System.Guid.Empty"/> if not set.
        /// </returns>
        [JsonPropertyName("ssg_csrsfeedbackid")]
        public System.Guid? FeedbackId 
        {
            get { return _id; }
            set { _id = value.HasValue ? value.Value : System.Guid.Empty; }
        }

        /// <summary>
        /// Primary Id alias. Logical name ssg_csrsfeedbackid.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public override Guid Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// Logical name ssg_csrsfeedbackmessage.
        /// </summary>
        [JsonPropertyName("ssg_csrsfeedbackmessage")]
        public string? Message { get; set; }

        /// <summary>
        /// Logical name ssg_csrsfeedbacksubject.
        /// </summary>
        [JsonPropertyName("ssg_csrsfeedbacksubject")]
        public string? Subject { get; set; }

        /// <summary>
        /// Logical name ssg_csrsparty.
        /// </summary>
        [JsonPropertyName("ssg_csrsparty")]
        public SSG_CsrsParty? Party { get; set; }

        /// <summary>
        /// The name of the custom entity. Logical name ssg_name.
        /// </summary>
        [JsonPropertyName("ssg_name")]
        public string? Name { get; set; }

        /// <summary>
        /// Contains all the attributes/columns on this class.
        /// </summary>
        public static readonly System.Linq.Expressions.Expression<Func<SSG_CsrsFeedback, object>> AllProperties = _ => new { _.FeedbackId, _.Message, _.Subject, _.Party, _.Name, _.StateCode, _.StatusCode };

        /// <summary>
        /// Contains all the normal attributes on this entity.
        /// </summary>
        public static class Attributes
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridtype = "owneridtype";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string ssg_csrsfeedbackid = "ssg_csrsfeedbackid";
            public const string ssg_csrsfeedbackmessage = "ssg_csrsfeedbackmessage";
            public const string ssg_csrsfeedbacksubject = "ssg_csrsfeedbacksubject";
            public const string ssg_csrsparty = "ssg_csrsparty";
            public const string ssg_csrspartyname = "ssg_csrspartyname";
            public const string ssg_name = "ssg_name";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }
        /// <summary>
        /// Contains all the attributes that represent a one to many relationship.
        /// These attributes will be a collection on this entity.
        /// </summary>
        public static class OneToManyRelationships
        {
            public const string ssg_csrsfeedback_AsyncOperations = "ssg_csrsfeedback_AsyncOperations";
            public const string ssg_csrsfeedback_BulkDeleteFailures = "ssg_csrsfeedback_BulkDeleteFailures";
            public const string ssg_csrsfeedback_DuplicateBaseRecord = "ssg_csrsfeedback_DuplicateBaseRecord";
            public const string ssg_csrsfeedback_DuplicateMatchingRecord = "ssg_csrsfeedback_DuplicateMatchingRecord";
            public const string ssg_csrsfeedback_MailboxTrackingFolders = "ssg_csrsfeedback_MailboxTrackingFolders";
            public const string ssg_csrsfeedback_PrincipalObjectAttributeAccesses = "ssg_csrsfeedback_PrincipalObjectAttributeAccesses";
            public const string ssg_csrsfeedback_ProcessSession = "ssg_csrsfeedback_ProcessSession";
            public const string ssg_csrsfeedback_SyncErrors = "ssg_csrsfeedback_SyncErrors";
            public const string ssg_csrsfeedback_UserEntityInstanceDatas = "ssg_csrsfeedback_UserEntityInstanceDatas";
        }
        /// <summary>
        /// Contains all the attributes that represent a many to one relationship.
        /// These attributes will be a single instance on this entity.
        /// </summary>
        public static class ManyToOneRelationships
        {
            public const string business_unit_ssg_csrsfeedback = "business_unit_ssg_csrsfeedback";
            public const string lk_ssg_csrsfeedback_createdby = "lk_ssg_csrsfeedback_createdby";
            public const string lk_ssg_csrsfeedback_createdonbehalfby = "lk_ssg_csrsfeedback_createdonbehalfby";
            public const string lk_ssg_csrsfeedback_modifiedby = "lk_ssg_csrsfeedback_modifiedby";
            public const string lk_ssg_csrsfeedback_modifiedonbehalfby = "lk_ssg_csrsfeedback_modifiedonbehalfby";
            public const string owner_ssg_csrsfeedback = "owner_ssg_csrsfeedback";
            public const string ssg_ssg_csrsparty_ssg_csrsfeedback_CSRSParty = "ssg_ssg_csrsparty_ssg_csrsfeedback_CSRSParty";
            public const string team_ssg_csrsfeedback = "team_ssg_csrsfeedback";
            public const string user_ssg_csrsfeedback = "user_ssg_csrsfeedback";
        }
    }

    /// <summary>
    /// Logical name ssg_csrsfile.
    /// </summary>
    public partial class SSG_CsrsFile : Entity
    {
        public const string EntityLogicalName = "ssg_csrsfile";

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency. Logical name exchangerate.
        /// </summary>
        [JsonPropertyName("exchangerate")]
        public decimal? ExchangeRate { get; set; }

        /// <summary>
        /// Logical name ssg_act.
        /// </summary>
        [JsonPropertyName("ssg_act")]
        public string? Act { get; set; }

        /// <summary>
        /// Auto Number to be copied to File Number. Do not delete. Logical name ssg_autonumber.
        /// </summary>
        [JsonPropertyName("ssg_autonumber")]
        public string? AutoNumber { get; set; }

        /// <summary>
        /// Select the level of court to filter the list of courts in the "Court Location" field. Logical name ssg_bccourtlevel.
        /// </summary>
        [JsonPropertyName("ssg_bccourtlevel")]
        public SSG_CsrsBCCourtLevel? BCCourtLevel { get; set; }

        /// <summary>
        /// Select the BC Court registry for this File. Logical name ssg_bccourtlocation.
        /// </summary>
        [JsonPropertyName("ssg_bccourtlocation")]
        public SSG_IJSSBCCourtlocation? BCCourtLocation { get; set; }

        /// <summary>
        /// Logical name ssg_courtfilenumber.
        /// </summary>
        [JsonPropertyName("ssg_courtfilenumber")]
        public string? CourtFileNumber { get; set; }

        /// <summary>
        /// Select the applicable type for the court file. Logical name ssg_courtfiletype.
        /// </summary>
        [JsonPropertyName("ssg_courtfiletype")]
        public string? CourtFileType { get; set; }

        /// <summary>
        /// Specify the court that executed the Court Order or Written Agreement. Defaulted to "Kelowna". Logical name ssg_courtlocation.
        /// </summary>
        [JsonPropertyName("ssg_courtlocation")]
        public string? CourtLocation { get; set; }

        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrsfileid.
        /// </summary>
        /// <returns>
        /// The primary id value or <see cref="System.Guid.Empty"/> if not set.
        /// </returns>
        [JsonPropertyName("ssg_csrsfileid")]
        public System.Guid? CsrsFileId 
        {
            get { return _id; }
            set { _id = value.HasValue ? value.Value : System.Guid.Empty; }
        }

        /// <summary>
        /// Primary Id alias. Logical name ssg_csrsfileid.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public override Guid Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// Enter the date the Order or WA was issued. Logical name ssg_dateoforderorwa.
        /// </summary>
        [JsonPropertyName("ssg_dateoforderorwa")]
        public DateTime? DateofOrderorWA { get; set; }

        /// <summary>
        /// Specify the order commencement date. Logical name ssg_dateordercommences.
        /// </summary>
        [JsonPropertyName("ssg_dateordercommences")]
        public DateTime? DateOrderCommences { get; set; }

        /// <summary>
        /// Days of the month that Child Support is due on. Logical name ssg_daysofmonthpayable.
        /// </summary>
        [JsonPropertyName("ssg_daysofmonthpayable")]
        public string? DaysofMonthPayable { get; set; }

        /// <summary>
        /// File record that is duplicated by this File. Logical name ssg_duplicatedfilenumber.
        /// </summary>
        [JsonPropertyName("ssg_duplicatedfilenumber")]
        public SSG_CsrsFile? DuplicatedFileNumber { get; set; }

        /// <summary>
        /// Identify whether this file is a duplicate of another file. Visible only during Submitted Status. Logical name ssg_filealreadyexists.
        /// </summary>
        [JsonPropertyName("ssg_filealreadyexists")]
        public string? FileAlreadyExists { get; set; }

        /// <summary>
        /// Indicator whether the File was closed before any recalculations were done. Logical name ssg_fileclosedatenrollment.
        /// </summary>
        [JsonPropertyName("ssg_fileclosedatenrollment")]
        public string? FileClosedatEnrollment { get; set; }

        /// <summary>
        /// The number ID for the file record. Logical name ssg_filenumber.
        /// </summary>
        [JsonPropertyName("ssg_filenumber")]
        public string? FileNumber { get; set; }

        /// <summary>
        /// Indicate whether the FMEP File is active or not. Logical name ssg_fmepfileactive.
        /// </summary>
        [JsonPropertyName("ssg_fmepfileactive")]
        public bool? FMEPFileActive { get; set; }

        /// <summary>
        /// Enter ID of the FMEP file number corresponding to this file. Logical name ssg_fmepfilenumber.
        /// </summary>
        [JsonPropertyName("ssg_fmepfilenumber")]
        public string? FMEPFileNumber { get; set; }

        /// <summary>
        /// Logical name ssg_latestduplicatefile.
        /// </summary>
        [JsonPropertyName("ssg_latestduplicatefile")]
        public SSG_CsrsFile? LatestDuplicateFile { get; set; }

        /// <summary>
        /// Number of Recalculations for the File - Used for numbering File's Recalculations. Logical name ssg_numberofrecalculations.
        /// </summary>
        [JsonPropertyName("ssg_numberofrecalculations")]
        public int? NumberofRecalculations { get; set; }

        /// <summary>
        /// Specify which Party enrolled for the CSRS Program. Logical name ssg_partyenrolled.
        /// </summary>
        [JsonPropertyName("ssg_partyenrolled")]
        public string? PartyEnrolled { get; set; }

        /// <summary>
        /// Indicate if the payor’s guideline income is based on a pattern of income. Logical name ssg_patternofincomepayor.
        /// </summary>
        [JsonPropertyName("ssg_patternofincomepayor")]
        public string? PatternofIncomePayor { get; set; }

        /// <summary>
        /// Select the party who provides (pays for) support. Logical name ssg_payor.
        /// </summary>
        [JsonPropertyName("ssg_payor")]
        public SSG_CsrsParty? Payor { get; set; }

        /// <summary>
        /// Indicate whether the Recalculation was ordered by the court. Logical name ssg_recalculationorderedbythecourt.
        /// </summary>
        [JsonPropertyName("ssg_recalculationorderedbythecourt")]
        public bool? RecalculationOrderedbytheCourt { get; set; }

        /// <summary>
        /// Select the party who receives support. Logical name ssg_recipient.
        /// </summary>
        [JsonPropertyName("ssg_recipient")]
        public SSG_CsrsParty? Recipient { get; set; }

        /// <summary>
        /// System-set indicator to allow capture of Recipient's Income on Recalculations. Logical name ssg_recipientsincomeneeded.
        /// </summary>
        [JsonPropertyName("ssg_recipientsincomeneeded")]
        public bool? RecipientsIncomeNeeded { get; set; }

        /// <summary>
        /// The registration date of the CSRS file. Logical name ssg_registrationdate.
        /// </summary>
        [JsonPropertyName("ssg_registrationdate")]
        public DateTime? RegistrationDate { get; set; }

        /// <summary>
        /// Indicate whether there is a Safety Alert applies to the file. Logical name ssg_safetyalert.
        /// </summary>
        [JsonPropertyName("ssg_safetyalert")]
        public bool? SafetyAlert { get; set; }

        /// <summary>
        /// Description of the Safety Concerns. Logical name ssg_safetyconcerndescription.
        /// </summary>
        [JsonPropertyName("ssg_safetyconcerndescription")]
        public string? SafetyConcernDescription { get; set; }

        /// <summary>
        /// Indicator whether special expenses must be accounted for in the Child Support. Logical name ssg_section7expenses.
        /// </summary>
        [JsonPropertyName("ssg_section7expenses")]
        public string? Section7Expenses { get; set; }

        /// <summary>
        /// Indicate whether the Section 7 expenses will be recalculated for the File. Logical name ssg_section7expensesrecalculated.
        /// </summary>
        [JsonPropertyName("ssg_section7expensesrecalculated")]
        public bool? Section7ExpensesRecalculated { get; set; }

        /// <summary>
        /// Percentage of Section 7 Expenses payable by the Payor. Logical name ssg_section7payorsproportion.
        /// </summary>
        [JsonPropertyName("ssg_section7payorsproportion")]
        public int? Section7PayorsProportion { get; set; }

        /// <summary>
        /// Percentage of Section 7 Expenses payable by the Recipient. Logical name ssg_section7recipientsproportion.
        /// </summary>
        [JsonPropertyName("ssg_section7recipientsproportion")]
        public int? Section7RecipientsProportion { get; set; }

        /// <summary>
        /// Logical name ssg_sharedparenting.
        /// </summary>
        [JsonPropertyName("ssg_sharedparenting")]
        public bool? SharedParenting { get; set; }

        /// <summary>
        /// Date when Section 7 Expenses were withdrawn. Logical name ssg_specialexpenseswithdrawndate.
        /// </summary>
        [JsonPropertyName("ssg_specialexpenseswithdrawndate")]
        public DateTime? SpecialExpensesWithdrawnDate { get; set; }

        /// <summary>
        /// Specify whether the parents are sharing custody (parenting) of the child(ren). Logical name ssg_splitparentingarrangement.
        /// </summary>
        [JsonPropertyName("ssg_splitparentingarrangement")]
        public bool? SplitParentingArrangement { get; set; }

        /// <summary>
        /// Logical name ssg_styleofcauseapplicant.
        /// </summary>
        [JsonPropertyName("ssg_styleofcauseapplicant")]
        public string? StyleofCauseApplicant { get; set; }

        /// <summary>
        /// Logical name ssg_styleofcauserespondent.
        /// </summary>
        [JsonPropertyName("ssg_styleofcauserespondent")]
        public string? StyleofCauseRespondent { get; set; }

        /// <summary>
        /// Date/time the application or file was first submitted to the Program. Logical name ssg_submissiondate.
        /// </summary>
        [JsonPropertyName("ssg_submissiondate")]
        public DateTime? SubmissionDate { get; set; }

        /// <summary>
        /// Date when the File's state is set to "Inactive". Logical name ssg_terminationdate.
        /// </summary>
        [JsonPropertyName("ssg_terminationdate")]
        public DateTime? TerminationDate { get; set; }

        /// <summary>
        /// Contains all the attributes/columns on this class.
        /// </summary>
        public static readonly System.Linq.Expressions.Expression<Func<SSG_CsrsFile, object>> AllProperties = _ => new { _.ExchangeRate, _.Act, _.AutoNumber, _.BCCourtLevel, _.BCCourtLocation, _.CourtFileNumber, _.CourtFileType, _.CourtLocation, _.CsrsFileId, _.DateofOrderorWA, _.DateOrderCommences, _.DaysofMonthPayable, _.DuplicatedFileNumber, _.FileAlreadyExists, _.FileClosedatEnrollment, _.FileNumber, _.FMEPFileActive, _.FMEPFileNumber, _.LatestDuplicateFile, _.NumberofRecalculations, _.PartyEnrolled, _.PatternofIncomePayor, _.Payor, _.RecalculationOrderedbytheCourt, _.Recipient, _.RecipientsIncomeNeeded, _.RegistrationDate, _.SafetyAlert, _.SafetyConcernDescription, _.Section7Expenses, _.Section7ExpensesRecalculated, _.Section7PayorsProportion, _.Section7RecipientsProportion, _.SharedParenting, _.SpecialExpensesWithdrawnDate, _.SplitParentingArrangement, _.StyleofCauseApplicant, _.StyleofCauseRespondent, _.SubmissionDate, _.TerminationDate, _.StateCode, _.StatusCode };

        /// <summary>
        /// Contains all the normal attributes on this entity.
        /// </summary>
        public static class Attributes
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridtype = "owneridtype";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string ssg_act = "ssg_act";
            public const string ssg_actname = "ssg_actname";
            public const string ssg_autonumber = "ssg_autonumber";
            public const string ssg_bccourtlevel = "ssg_bccourtlevel";
            public const string ssg_bccourtlevelname = "ssg_bccourtlevelname";
            public const string ssg_bccourtlocation = "ssg_bccourtlocation";
            public const string ssg_bccourtlocationname = "ssg_bccourtlocationname";
            public const string ssg_childsupportonorder = "ssg_childsupportonorder";
            public const string ssg_childsupportonorder_base = "ssg_childsupportonorder_base";
            public const string ssg_courtfilenumber = "ssg_courtfilenumber";
            public const string ssg_courtfiletype = "ssg_courtfiletype";
            public const string ssg_courtfiletypename = "ssg_courtfiletypename";
            public const string ssg_courtlocation = "ssg_courtlocation";
            public const string ssg_csrsfileid = "ssg_csrsfileid";
            public const string ssg_dateoforderorwa = "ssg_dateoforderorwa";
            public const string ssg_dateordercommences = "ssg_dateordercommences";
            public const string ssg_daysofmonthpayable = "ssg_daysofmonthpayable";
            public const string ssg_daysofmonthpayablename = "ssg_daysofmonthpayablename";
            public const string ssg_duplicatedfilenumber = "ssg_duplicatedfilenumber";
            public const string ssg_duplicatedfilenumbername = "ssg_duplicatedfilenumbername";
            public const string ssg_filealreadyexists = "ssg_filealreadyexists";
            public const string ssg_filealreadyexistsname = "ssg_filealreadyexistsname";
            public const string ssg_fileclosedatenrollment = "ssg_fileclosedatenrollment";
            public const string ssg_fileclosedatenrollmentname = "ssg_fileclosedatenrollmentname";
            public const string ssg_filenumber = "ssg_filenumber";
            public const string ssg_fmepfileactive = "ssg_fmepfileactive";
            public const string ssg_fmepfileactivename = "ssg_fmepfileactivename";
            public const string ssg_fmepfilenumber = "ssg_fmepfilenumber";
            public const string ssg_incomeonorder = "ssg_incomeonorder";
            public const string ssg_incomeonorder_base = "ssg_incomeonorder_base";
            public const string ssg_incomeyear1 = "ssg_incomeyear1";
            public const string ssg_incomeyear1_base = "ssg_incomeyear1_base";
            public const string ssg_incomeyear2 = "ssg_incomeyear2";
            public const string ssg_incomeyear2_base = "ssg_incomeyear2_base";
            public const string ssg_incomeyear3 = "ssg_incomeyear3";
            public const string ssg_incomeyear3_base = "ssg_incomeyear3_base";
            public const string ssg_latestduplicatefile = "ssg_latestduplicatefile";
            public const string ssg_latestduplicatefilename = "ssg_latestduplicatefilename";
            public const string ssg_numberofrecalculations = "ssg_numberofrecalculations";
            public const string ssg_offsetchildsupportamountonorder = "ssg_offsetchildsupportamountonorder";
            public const string ssg_offsetchildsupportamountonorder_base = "ssg_offsetchildsupportamountonorder_base";
            public const string ssg_partyenrolled = "ssg_partyenrolled";
            public const string ssg_partyenrolledname = "ssg_partyenrolledname";
            public const string ssg_patternofincomepayor = "ssg_patternofincomepayor";
            public const string ssg_patternofincomepayorname = "ssg_patternofincomepayorname";
            public const string ssg_payor = "ssg_payor";
            public const string ssg_payorname = "ssg_payorname";
            public const string ssg_recalculationorderedbythecourt = "ssg_recalculationorderedbythecourt";
            public const string ssg_recalculationorderedbythecourtname = "ssg_recalculationorderedbythecourtname";
            public const string ssg_recipient = "ssg_recipient";
            public const string ssg_recipientname = "ssg_recipientname";
            public const string ssg_recipientschildsupportonorder = "ssg_recipientschildsupportonorder";
            public const string ssg_recipientschildsupportonorder_base = "ssg_recipientschildsupportonorder_base";
            public const string ssg_recipientsincomeneeded = "ssg_recipientsincomeneeded";
            public const string ssg_recipientsincomeneededname = "ssg_recipientsincomeneededname";
            public const string ssg_recipientsincomeonorder = "ssg_recipientsincomeonorder";
            public const string ssg_recipientsincomeonorder_base = "ssg_recipientsincomeonorder_base";
            public const string ssg_registrationdate = "ssg_registrationdate";
            public const string ssg_safetyalert = "ssg_safetyalert";
            public const string ssg_safetyalertname = "ssg_safetyalertname";
            public const string ssg_safetyconcerndescription = "ssg_safetyconcerndescription";
            public const string ssg_section7expenses = "ssg_section7expenses";
            public const string ssg_section7expensesname = "ssg_section7expensesname";
            public const string ssg_section7expensesrecalculated = "ssg_section7expensesrecalculated";
            public const string ssg_section7expensesrecalculatedname = "ssg_section7expensesrecalculatedname";
            public const string ssg_section7payorsamount = "ssg_section7payorsamount";
            public const string ssg_section7payorsamount_base = "ssg_section7payorsamount_base";
            public const string ssg_section7payorsproportion = "ssg_section7payorsproportion";
            public const string ssg_section7recipientsamount = "ssg_section7recipientsamount";
            public const string ssg_section7recipientsamount_base = "ssg_section7recipientsamount_base";
            public const string ssg_section7recipientsproportion = "ssg_section7recipientsproportion";
            public const string ssg_section7totalamount = "ssg_section7totalamount";
            public const string ssg_section7totalamount_base = "ssg_section7totalamount_base";
            public const string ssg_sharedparenting = "ssg_sharedparenting";
            public const string ssg_sharedparentingname = "ssg_sharedparentingname";
            public const string ssg_specialexpenseswithdrawndate = "ssg_specialexpenseswithdrawndate";
            public const string ssg_splitparentingarrangement = "ssg_splitparentingarrangement";
            public const string ssg_splitparentingarrangementname = "ssg_splitparentingarrangementname";
            public const string ssg_styleofcauseapplicant = "ssg_styleofcauseapplicant";
            public const string ssg_styleofcauserespondent = "ssg_styleofcauserespondent";
            public const string ssg_submissiondate = "ssg_submissiondate";
            public const string ssg_terminationdate = "ssg_terminationdate";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }
        /// <summary>
        /// Contains all the attributes that represent a one to many relationship.
        /// These attributes will be a collection on this entity.
        /// </summary>
        public static class OneToManyRelationships
        {
            public const string ssg_csrsfile_ActivityPointers = "ssg_csrsfile_ActivityPointers";
            public const string ssg_csrsfile_afk_workflowtasks = "ssg_csrsfile_afk_workflowtasks";
            public const string ssg_csrsfile_Annotations = "ssg_csrsfile_Annotations";
            public const string ssg_csrsfile_Appointments = "ssg_csrsfile_Appointments";
            public const string ssg_csrsfile_AsyncOperations = "ssg_csrsfile_AsyncOperations";
            public const string ssg_csrsfile_BulkDeleteFailures = "ssg_csrsfile_BulkDeleteFailures";
            public const string ssg_csrsfile_DuplicateBaseRecord = "ssg_csrsfile_DuplicateBaseRecord";
            public const string ssg_csrsfile_DuplicateMatchingRecord = "ssg_csrsfile_DuplicateMatchingRecord";
            public const string ssg_csrsfile_Emails = "ssg_csrsfile_Emails";
            public const string ssg_csrsfile_Faxes = "ssg_csrsfile_Faxes";
            public const string ssg_csrsfile_Letters = "ssg_csrsfile_Letters";
            public const string ssg_csrsfile_MailboxTrackingFolders = "ssg_csrsfile_MailboxTrackingFolders";
            public const string ssg_csrsfile_PhoneCalls = "ssg_csrsfile_PhoneCalls";
            public const string ssg_csrsfile_PrincipalObjectAttributeAccesses = "ssg_csrsfile_PrincipalObjectAttributeAccesses";
            public const string ssg_csrsfile_ProcessSession = "ssg_csrsfile_ProcessSession";
            public const string ssg_csrsfile_RecurringAppointmentMasters = "ssg_csrsfile_RecurringAppointmentMasters";
            public const string ssg_csrsfile_ServiceAppointments = "ssg_csrsfile_ServiceAppointments";
            public const string ssg_csrsfile_SharePointDocumentLocations = "ssg_csrsfile_SharePointDocumentLocations";
            public const string ssg_csrsfile_SharePointDocuments = "ssg_csrsfile_SharePointDocuments";
            public const string ssg_csrsfile_SocialActivities = "ssg_csrsfile_SocialActivities";
            public const string ssg_csrsfile_ssg_csrsarchivedcourtfile_FileNumber = "ssg_csrsfile_ssg_csrsarchivedcourtfile_FileNumber";
            public const string ssg_csrsfile_ssg_csrschild_ChildsFileNumber = "ssg_csrsfile_ssg_csrschild_ChildsFileNumber";
            public const string ssg_csrsfile_ssg_csrsfile_LatestDuplicateFile = "ssg_csrsfile_ssg_csrsfile_LatestDuplicateFile";
            public const string ssg_csrsfile_ssg_csrsfile_MasterFileRecord = "ssg_csrsfile_ssg_csrsfile_MasterFileRecord";
            public const string ssg_csrsfile_ssg_csrsrecalculation_FileNumber = "ssg_csrsfile_ssg_csrsrecalculation_FileNumber";
            public const string ssg_csrsfile_SyncErrors = "ssg_csrsfile_SyncErrors";
            public const string ssg_csrsfile_Tasks = "ssg_csrsfile_Tasks";
            public const string ssg_csrsfile_UserEntityInstanceDatas = "ssg_csrsfile_UserEntityInstanceDatas";
            public const string ssg_ssg_csrsfile_ssg_csrsportalmessage_csrsFile = "ssg_ssg_csrsfile_ssg_csrsportalmessage_csrsFile";
        }
        /// <summary>
        /// Contains all the attributes that represent a many to one relationship.
        /// These attributes will be a single instance on this entity.
        /// </summary>
        public static class ManyToOneRelationships
        {
            public const string business_unit_ssg_csrsfile = "business_unit_ssg_csrsfile";
            public const string lk_ssg_csrsfile_createdby = "lk_ssg_csrsfile_createdby";
            public const string lk_ssg_csrsfile_createdonbehalfby = "lk_ssg_csrsfile_createdonbehalfby";
            public const string lk_ssg_csrsfile_modifiedby = "lk_ssg_csrsfile_modifiedby";
            public const string lk_ssg_csrsfile_modifiedonbehalfby = "lk_ssg_csrsfile_modifiedonbehalfby";
            public const string owner_ssg_csrsfile = "owner_ssg_csrsfile";
            public const string ssg_csrsbccourtlevel_ssg_csrsfile_BCCourtLevel = "ssg_csrsbccourtlevel_ssg_csrsfile_BCCourtLevel";
            public const string ssg_csrsfile_ssg_csrsfile_LatestDuplicateFile = "ssg_csrsfile_ssg_csrsfile_LatestDuplicateFile";
            public const string ssg_csrsfile_ssg_csrsfile_MasterFileRecord = "ssg_csrsfile_ssg_csrsfile_MasterFileRecord";
            public const string ssg_csrsparty_ssg_csrsfile_Payor = "ssg_csrsparty_ssg_csrsfile_Payor";
            public const string ssg_csrsparty_ssg_csrsfile_Recipient = "ssg_csrsparty_ssg_csrsfile_Recipient";
            public const string ssg_ijssbccourtlocation_ssg_csrsfile_BCCourtLocation = "ssg_ijssbccourtlocation_ssg_csrsfile_BCCourtLocation";
            public const string team_ssg_csrsfile = "team_ssg_csrsfile";
            public const string TransactionCurrency_ssg_csrsfile = "TransactionCurrency_ssg_csrsfile";
            public const string user_ssg_csrsfile = "user_ssg_csrsfile";
        }
    }

    /// <summary>
    /// Child Support Recalculation System parties. Logical name ssg_csrsparty.
    /// </summary>
    public partial class SSG_CsrsParty : Entity
    {
        public const string EntityLogicalName = "ssg_csrsparty";

        /// <summary>
        /// Logical name ssg_areapostalcode.
        /// </summary>
        [JsonPropertyName("ssg_areapostalcode")]
        public string? PostalCode { get; set; }

        /// <summary>
        /// Logical name ssg_bceid_displayname.
        /// </summary>
        [JsonPropertyName("ssg_bceid_displayname")]
        public string? BCeIDDisplayName { get; set; }

        /// <summary>
        /// Logical name ssg_bceid_guid.
        /// </summary>
        [JsonPropertyName("ssg_bceid_guid")]
        public string? BCeIDGuid { get; set; }

        /// <summary>
        /// Logical name ssg_cellphone.
        /// </summary>
        [JsonPropertyName("ssg_cellphone")]
        public string? CellPhone { get; set; }

        /// <summary>
        /// Party's city of residence. Logical name ssg_city.
        /// </summary>
        [JsonPropertyName("ssg_city")]
        public string? City { get; set; }

        /// <summary>
        /// Logical name ssg_csrsoptoutedocuments.
        /// </summary>
        [JsonPropertyName("ssg_csrsoptoutedocuments")]
        public bool? OptOutElectronicDocuments { get; set; }

        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrspartyid.
        /// </summary>
        /// <returns>
        /// The primary id value or <see cref="System.Guid.Empty"/> if not set.
        /// </returns>
        [JsonPropertyName("ssg_csrspartyid")]
        public System.Guid? PartyId 
        {
            get { return _id; }
            set { _id = value.HasValue ? value.Value : System.Guid.Empty; }
        }

        /// <summary>
        /// Primary Id alias. Logical name ssg_csrspartyid.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public override Guid Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// Logical name ssg_dateofbirth.
        /// </summary>
        [JsonPropertyName("ssg_dateofbirth")]
        public DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// Select the master Party record that is duplicated by this Party. Logical name ssg_duplicatedparty.
        /// </summary>
        [JsonPropertyName("ssg_duplicatedparty")]
        public SSG_CsrsParty? DuplicatedParty { get; set; }

        /// <summary>
        /// Logical name ssg_email.
        /// </summary>
        [JsonPropertyName("ssg_email")]
        public string? Email { get; set; }

        /// <summary>
        /// Logical name ssg_firstname.
        /// </summary>
        [JsonPropertyName("ssg_firstname")]
        public string? FirstName { get; set; }

        /// <summary>
        /// Logical name ssg_homephone.
        /// </summary>
        [JsonPropertyName("ssg_homephone")]
        public string? HomePhone { get; set; }

        /// <summary>
        /// Specify which identity the person most closely identifies with. Logical name ssg_identity.
        /// </summary>
        [JsonPropertyName("ssg_identity")]
        public string? Identity { get; set; }

        /// <summary>
        /// Logical name ssg_lastname.
        /// </summary>
        [JsonPropertyName("ssg_lastname")]
        public string? LastName { get; set; }

        /// <summary>
        /// Latest duplicate record for this Party, used for data comparison purposes. Logical name ssg_latestduplicateparty.
        /// </summary>
        [JsonPropertyName("ssg_latestduplicateparty")]
        public SSG_CsrsParty? LatestDuplicateParty { get; set; }

        /// <summary>
        /// Logical name ssg_middlename.
        /// </summary>
        [JsonPropertyName("ssg_middlename")]
        public string? MiddleName { get; set; }

        /// <summary>
        /// Indicate whether this Party is a duplicate of another Party record. Logical name ssg_partyalreadyexists.
        /// </summary>
        [JsonPropertyName("ssg_partyalreadyexists")]
        public string? PartyAlreadyExists { get; set; }

        /// <summary>
        /// Select the gender the person identifies as. Logical name ssg_partygender.
        /// </summary>
        [JsonPropertyName("ssg_partygender")]
        public string? Gender { get; set; }

        /// <summary>
        /// Enter the preferred name for the Party. Logical name ssg_preferredname.
        /// </summary>
        [JsonPropertyName("ssg_preferredname")]
        public string? PreferredName { get; set; }

        /// <summary>
        /// Logical name ssg_provinceterritory.
        /// </summary>
        [JsonPropertyName("ssg_provinceterritory")]
        public string? Province { get; set; }

        /// <summary>
        /// Select the program/person who referred the Party to CSRS. Logical name ssg_referral.
        /// </summary>
        [JsonPropertyName("ssg_referral")]
        public string? Referral { get; set; }

        /// <summary>
        /// First line of the Party's street address. Logical name ssg_street1.
        /// </summary>
        [JsonPropertyName("ssg_street1")]
        public string? AddressStreet1 { get; set; }

        /// <summary>
        /// Additional details for the Party's street address (for unit #, floor, buzzer #, etc). Logical name ssg_street2.
        /// </summary>
        [JsonPropertyName("ssg_street2")]
        public string? AddressStreet2 { get; set; }

        /// <summary>
        /// Logical name ssg_workphone.
        /// </summary>
        [JsonPropertyName("ssg_workphone")]
        public string? WorkPhone { get; set; }

        /// <summary>
        /// Contains all the attributes/columns on this class.
        /// </summary>
        public static readonly System.Linq.Expressions.Expression<Func<SSG_CsrsParty, object>> AllProperties = _ => new { _.PostalCode, _.BCeIDDisplayName, _.BCeIDGuid, _.CellPhone, _.City, _.OptOutElectronicDocuments, _.PartyId, _.DateOfBirth, _.DuplicatedParty, _.Email, _.FirstName, _.HomePhone, _.Identity, _.LastName, _.LatestDuplicateParty, _.MiddleName, _.PartyAlreadyExists, _.Gender, _.PreferredName, _.Province, _.Referral, _.AddressStreet1, _.AddressStreet2, _.WorkPhone, _.StateCode, _.StatusCode };

        /// <summary>
        /// Contains all the normal attributes on this entity.
        /// </summary>
        public static class Attributes
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridtype = "owneridtype";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string ssg_areapostalcode = "ssg_areapostalcode";
            public const string ssg_bceid_displayname = "ssg_bceid_displayname";
            public const string ssg_bceid_guid = "ssg_bceid_guid";
            public const string ssg_bceid_last_update = "ssg_bceid_last_update";
            public const string ssg_bceid_userid = "ssg_bceid_userid";
            public const string ssg_cellphone = "ssg_cellphone";
            public const string ssg_city = "ssg_city";
            public const string ssg_csrsoptoutedocuments = "ssg_csrsoptoutedocuments";
            public const string ssg_csrsoptoutedocumentsname = "ssg_csrsoptoutedocumentsname";
            public const string ssg_csrspartyid = "ssg_csrspartyid";
            public const string ssg_dateofbirth = "ssg_dateofbirth";
            public const string ssg_duplicatedparty = "ssg_duplicatedparty";
            public const string ssg_duplicatedpartyname = "ssg_duplicatedpartyname";
            public const string ssg_email = "ssg_email";
            public const string ssg_firstname = "ssg_firstname";
            public const string ssg_fullname = "ssg_fullname";
            public const string ssg_gender = "ssg_gender";
            public const string ssg_gendername = "ssg_gendername";
            public const string ssg_homephone = "ssg_homephone";
            public const string ssg_identity = "ssg_identity";
            public const string ssg_identityname = "ssg_identityname";
            public const string ssg_identityotherdetails = "ssg_identityotherdetails";
            public const string ssg_incomeassistance = "ssg_incomeassistance";
            public const string ssg_incomeassistancename = "ssg_incomeassistancename";
            public const string ssg_lastname = "ssg_lastname";
            public const string ssg_latestduplicateparty = "ssg_latestduplicateparty";
            public const string ssg_latestduplicatepartyname = "ssg_latestduplicatepartyname";
            public const string ssg_middlename = "ssg_middlename";
            public const string ssg_partyalreadyexists = "ssg_partyalreadyexists";
            public const string ssg_partyalreadyexistsname = "ssg_partyalreadyexistsname";
            public const string ssg_partygender = "ssg_partygender";
            public const string ssg_partygendername = "ssg_partygendername";
            public const string ssg_portalaccess = "ssg_portalaccess";
            public const string ssg_portalaccessname = "ssg_portalaccessname";
            public const string ssg_preferredcontactmethod = "ssg_preferredcontactmethod";
            public const string ssg_preferredcontactmethodname = "ssg_preferredcontactmethodname";
            public const string ssg_preferredname = "ssg_preferredname";
            public const string ssg_provinceterritory = "ssg_provinceterritory";
            public const string ssg_provinceterritoryname = "ssg_provinceterritoryname";
            public const string ssg_referral = "ssg_referral";
            public const string ssg_referralname = "ssg_referralname";
            public const string ssg_stagingfilenumber = "ssg_stagingfilenumber";
            public const string ssg_stagingid = "ssg_stagingid";
            public const string ssg_street1 = "ssg_street1";
            public const string ssg_street2 = "ssg_street2";
            public const string ssg_workphone = "ssg_workphone";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }
        /// <summary>
        /// Contains all the attributes that represent a one to many relationship.
        /// These attributes will be a collection on this entity.
        /// </summary>
        public static class OneToManyRelationships
        {
            public const string ssg_csrsparty_AsyncOperations = "ssg_csrsparty_AsyncOperations";
            public const string ssg_csrsparty_BulkDeleteFailures = "ssg_csrsparty_BulkDeleteFailures";
            public const string ssg_csrsparty_DuplicateBaseRecord = "ssg_csrsparty_DuplicateBaseRecord";
            public const string ssg_csrsparty_DuplicateMatchingRecord = "ssg_csrsparty_DuplicateMatchingRecord";
            public const string ssg_csrsparty_MailboxTrackingFolders = "ssg_csrsparty_MailboxTrackingFolders";
            public const string ssg_csrsparty_PrincipalObjectAttributeAccesses = "ssg_csrsparty_PrincipalObjectAttributeAccesses";
            public const string ssg_csrsparty_ProcessSession = "ssg_csrsparty_ProcessSession";
            public const string ssg_csrsparty_SharePointDocumentLocations = "ssg_csrsparty_SharePointDocumentLocations";
            public const string ssg_csrsparty_SharePointDocuments = "ssg_csrsparty_SharePointDocuments";
            public const string ssg_csrsparty_ssg_csrsarchivedpartycontact_PartyName = "ssg_csrsparty_ssg_csrsarchivedpartycontact_PartyName";
            public const string ssg_csrsparty_ssg_csrschild_ChildsFather = "ssg_csrsparty_ssg_csrschild_ChildsFather";
            public const string ssg_csrsparty_ssg_csrschild_Mother = "ssg_csrsparty_ssg_csrschild_Mother";
            public const string ssg_csrsparty_ssg_csrsfile_Payor = "ssg_csrsparty_ssg_csrsfile_Payor";
            public const string ssg_csrsparty_ssg_csrsfile_Recipient = "ssg_csrsparty_ssg_csrsfile_Recipient";
            public const string ssg_csrsparty_ssg_csrsparty_LatestDuplicateParty = "ssg_csrsparty_ssg_csrsparty_LatestDuplicateParty";
            public const string ssg_csrsparty_ssg_csrsparty_MasterPartyRecord = "ssg_csrsparty_ssg_csrsparty_MasterPartyRecord";
            public const string ssg_csrsparty_ssg_csrsrecalculation_Payor = "ssg_csrsparty_ssg_csrsrecalculation_Payor";
            public const string ssg_csrsparty_ssg_csrsrecalculation_Recipient = "ssg_csrsparty_ssg_csrsrecalculation_Recipient";
            public const string ssg_csrsparty_SyncErrors = "ssg_csrsparty_SyncErrors";
            public const string ssg_csrsparty_UserEntityInstanceDatas = "ssg_csrsparty_UserEntityInstanceDatas";
            public const string ssg_ssg_csrsparty_ssg_csrsfeedback_CSRSParty = "ssg_ssg_csrsparty_ssg_csrsfeedback_CSRSParty";
            public const string ssg_ssg_csrsparty_ssg_csrsportalaudithistory_Party = "ssg_ssg_csrsparty_ssg_csrsportalaudithistory_Party";
        }
        /// <summary>
        /// Contains all the attributes that represent a many to one relationship.
        /// These attributes will be a single instance on this entity.
        /// </summary>
        public static class ManyToOneRelationships
        {
            public const string business_unit_ssg_csrsparty = "business_unit_ssg_csrsparty";
            public const string lk_ssg_csrsparty_createdby = "lk_ssg_csrsparty_createdby";
            public const string lk_ssg_csrsparty_createdonbehalfby = "lk_ssg_csrsparty_createdonbehalfby";
            public const string lk_ssg_csrsparty_modifiedby = "lk_ssg_csrsparty_modifiedby";
            public const string lk_ssg_csrsparty_modifiedonbehalfby = "lk_ssg_csrsparty_modifiedonbehalfby";
            public const string owner_ssg_csrsparty = "owner_ssg_csrsparty";
            public const string ssg_csrsparty_ssg_csrsparty_LatestDuplicateParty = "ssg_csrsparty_ssg_csrsparty_LatestDuplicateParty";
            public const string ssg_csrsparty_ssg_csrsparty_MasterPartyRecord = "ssg_csrsparty_ssg_csrsparty_MasterPartyRecord";
            public const string team_ssg_csrsparty = "team_ssg_csrsparty";
            public const string user_ssg_csrsparty = "user_ssg_csrsparty";
        }
    }

    /// <summary>
    /// Logical name ssg_csrsportalmessage.
    /// </summary>
    public partial class SSG_CsrsPortalMessage : Entity
    {
        public const string EntityLogicalName = "ssg_csrsportalmessage";

        /// <summary>
        /// Logical name ssg_csrsfile.
        /// </summary>
        [JsonPropertyName("ssg_csrsfile")]
        public SSG_CsrsFile? File { get; set; }

        /// <summary>
        /// Logical name ssg_csrsmessageattachment.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessageattachment")]
        public bool? HasAttachment { get; set; }

        /// <summary>
        /// Logical name ssg_csrsmessagedate.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessagedate")]
        public DateTime? Date { get; set; }

        /// <summary>
        /// Logical name ssg_csrsmessageread.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessageread")]
        public bool? Read { get; set; }

        /// <summary>
        /// Logical name ssg_csrsmessagesubject.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessagesubject")]
        public string? Subject { get; set; }

        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrsportalmessageid.
        /// </summary>
        /// <returns>
        /// The primary id value or <see cref="System.Guid.Empty"/> if not set.
        /// </returns>
        [JsonPropertyName("ssg_csrsportalmessageid")]
        public System.Guid? MessageId 
        {
            get { return _id; }
            set { _id = value.HasValue ? value.Value : System.Guid.Empty; }
        }

        /// <summary>
        /// Primary Id alias. Logical name ssg_csrsportalmessageid.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public override Guid Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// The name of the custom entity. Logical name ssg_name.
        /// </summary>
        [JsonPropertyName("ssg_name")]
        public string? Name { get; set; }

        /// <summary>
        /// Contains all the attributes/columns on this class.
        /// </summary>
        public static readonly System.Linq.Expressions.Expression<Func<SSG_CsrsPortalMessage, object>> AllProperties = _ => new { _.File, _.HasAttachment, _.Date, _.Read, _.Subject, _.MessageId, _.Name, _.StateCode, _.StatusCode };

        /// <summary>
        /// Contains all the normal attributes on this entity.
        /// </summary>
        public static class Attributes
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridtype = "owneridtype";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string ssg_csrsfile = "ssg_csrsfile";
            public const string ssg_csrsfilename = "ssg_csrsfilename";
            public const string ssg_csrsmessageattachment = "ssg_csrsmessageattachment";
            public const string ssg_csrsmessageattachmentname = "ssg_csrsmessageattachmentname";
            public const string ssg_csrsmessagedate = "ssg_csrsmessagedate";
            public const string ssg_csrsmessageread = "ssg_csrsmessageread";
            public const string ssg_csrsmessagereadname = "ssg_csrsmessagereadname";
            public const string ssg_csrsmessagesubject = "ssg_csrsmessagesubject";
            public const string ssg_csrsportalmessageid = "ssg_csrsportalmessageid";
            public const string ssg_name = "ssg_name";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }
        /// <summary>
        /// Contains all the attributes that represent a one to many relationship.
        /// These attributes will be a collection on this entity.
        /// </summary>
        public static class OneToManyRelationships
        {
            public const string ssg_csrsportalmessage_AsyncOperations = "ssg_csrsportalmessage_AsyncOperations";
            public const string ssg_csrsportalmessage_BulkDeleteFailures = "ssg_csrsportalmessage_BulkDeleteFailures";
            public const string ssg_csrsportalmessage_DuplicateBaseRecord = "ssg_csrsportalmessage_DuplicateBaseRecord";
            public const string ssg_csrsportalmessage_DuplicateMatchingRecord = "ssg_csrsportalmessage_DuplicateMatchingRecord";
            public const string ssg_csrsportalmessage_MailboxTrackingFolders = "ssg_csrsportalmessage_MailboxTrackingFolders";
            public const string ssg_csrsportalmessage_PrincipalObjectAttributeAccesses = "ssg_csrsportalmessage_PrincipalObjectAttributeAccesses";
            public const string ssg_csrsportalmessage_ProcessSession = "ssg_csrsportalmessage_ProcessSession";
            public const string ssg_csrsportalmessage_SyncErrors = "ssg_csrsportalmessage_SyncErrors";
            public const string ssg_csrsportalmessage_UserEntityInstanceDatas = "ssg_csrsportalmessage_UserEntityInstanceDatas";
        }
        /// <summary>
        /// Contains all the attributes that represent a many to one relationship.
        /// These attributes will be a single instance on this entity.
        /// </summary>
        public static class ManyToOneRelationships
        {
            public const string business_unit_ssg_csrsportalmessage = "business_unit_ssg_csrsportalmessage";
            public const string lk_ssg_csrsportalmessage_createdby = "lk_ssg_csrsportalmessage_createdby";
            public const string lk_ssg_csrsportalmessage_createdonbehalfby = "lk_ssg_csrsportalmessage_createdonbehalfby";
            public const string lk_ssg_csrsportalmessage_modifiedby = "lk_ssg_csrsportalmessage_modifiedby";
            public const string lk_ssg_csrsportalmessage_modifiedonbehalfby = "lk_ssg_csrsportalmessage_modifiedonbehalfby";
            public const string owner_ssg_csrsportalmessage = "owner_ssg_csrsportalmessage";
            public const string ssg_ssg_csrsfile_ssg_csrsportalmessage_csrsFile = "ssg_ssg_csrsfile_ssg_csrsportalmessage_csrsFile";
            public const string team_ssg_csrsportalmessage = "team_ssg_csrsportalmessage";
            public const string user_ssg_csrsportalmessage = "user_ssg_csrsportalmessage";
        }
    }

    /// <summary>
    /// Information about the BC Court where the Court Order/Service Request was executed. Logical name ssg_ijssbccourtlocation.
    /// </summary>
    public partial class SSG_IJSSBCCourtlocation : Entity
    {
        public const string EntityLogicalName = "ssg_ijssbccourtlocation";

        /// <summary>
        /// The name of the BC court. Logical name ssg_bccourtlocationname.
        /// </summary>
        [JsonPropertyName("ssg_bccourtlocationname")]
        public string? Name { get; set; }

        /// <summary>
        /// Enter the city in BC where the court is located. Logical name ssg_city.
        /// </summary>
        [JsonPropertyName("ssg_city")]
        public string? City { get; set; }

        /// <summary>
        /// Select the level for this court. Logical name ssg_courtlevel.
        /// </summary>
        [JsonPropertyName("ssg_courtlevel")]
        public string? CourtLevel { get; set; }

        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_ijssbccourtlocationid.
        /// </summary>
        /// <returns>
        /// The primary id value or <see cref="System.Guid.Empty"/> if not set.
        /// </returns>
        [JsonPropertyName("ssg_ijssbccourtlocationid")]
        public System.Guid? CourtLocationId 
        {
            get { return _id; }
            set { _id = value.HasValue ? value.Value : System.Guid.Empty; }
        }

        /// <summary>
        /// Primary Id alias. Logical name ssg_ijssbccourtlocationid.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public override Guid Id { get { return _id; } set { _id = value; } }

        /// <summary>
        /// This field always defaults to BC. Logical name ssg_provinceterritory.
        /// </summary>
        [JsonPropertyName("ssg_provinceterritory")]
        public string? Province { get; set; }

        /// <summary>
        /// Enter the street address for the court. Logical name ssg_street1.
        /// </summary>
        [JsonPropertyName("ssg_street1")]
        public string? AddressStreet1 { get; set; }

        /// <summary>
        /// Enter additional address details (unit #, entrance, etc.) for the court. Logical name ssg_street2.
        /// </summary>
        [JsonPropertyName("ssg_street2")]
        public string? AddressStreet2 { get; set; }

        /// <summary>
        /// Contains all the attributes/columns on this class.
        /// </summary>
        public static readonly System.Linq.Expressions.Expression<Func<SSG_IJSSBCCourtlocation, object>> AllProperties = _ => new { _.Name, _.City, _.CourtLevel, _.CourtLocationId, _.Province, _.AddressStreet1, _.AddressStreet2, _.StateCode, _.StatusCode };

        /// <summary>
        /// Contains all the normal attributes on this entity.
        /// </summary>
        public static class Attributes
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridtype = "owneridtype";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string ssg_accessdbid = "ssg_accessdbid";
            public const string ssg_bccourtlocationname = "ssg_bccourtlocationname";
            public const string ssg_city = "ssg_city";
            public const string ssg_country = "ssg_country";
            public const string ssg_countryname = "ssg_countryname";
            public const string ssg_courtlevel = "ssg_courtlevel";
            public const string ssg_courtlevelname = "ssg_courtlevelname";
            public const string ssg_courtofficeemail = "ssg_courtofficeemail";
            public const string ssg_courtofficefax = "ssg_courtofficefax";
            public const string ssg_courtofficephone = "ssg_courtofficephone";
            public const string ssg_courtofficephoneextension = "ssg_courtofficephoneextension";
            public const string ssg_csrscourtlevelfilter = "ssg_csrscourtlevelfilter";
            public const string ssg_csrscourtlevelfiltername = "ssg_csrscourtlevelfiltername";
            public const string ssg_datamigrationcount = "ssg_datamigrationcount";
            public const string ssg_filenumber = "ssg_filenumber";
            public const string ssg_ijssbccourtlocationid = "ssg_ijssbccourtlocationid";
            public const string ssg_postalcode = "ssg_postalcode";
            public const string ssg_provinceterritory = "ssg_provinceterritory";
            public const string ssg_provinceterritoryname = "ssg_provinceterritoryname";
            public const string ssg_stagingid = "ssg_stagingid";
            public const string ssg_street1 = "ssg_street1";
            public const string ssg_street2 = "ssg_street2";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }
        /// <summary>
        /// Contains all the attributes that represent a one to many relationship.
        /// These attributes will be a collection on this entity.
        /// </summary>
        public static class OneToManyRelationships
        {
            public const string ssg_ijssbccourtlocation_Annotations = "ssg_ijssbccourtlocation_Annotations";
            public const string ssg_ijssbccourtlocation_AsyncOperations = "ssg_ijssbccourtlocation_AsyncOperations";
            public const string ssg_ijssbccourtlocation_BulkDeleteFailures = "ssg_ijssbccourtlocation_BulkDeleteFailures";
            public const string ssg_ijssbccourtlocation_DuplicateBaseRecord = "ssg_ijssbccourtlocation_DuplicateBaseRecord";
            public const string ssg_ijssbccourtlocation_DuplicateMatchingRecord = "ssg_ijssbccourtlocation_DuplicateMatchingRecord";
            public const string ssg_ijssbccourtlocation_MailboxTrackingFolders = "ssg_ijssbccourtlocation_MailboxTrackingFolders";
            public const string ssg_ijssbccourtlocation_PrincipalObjectAttributeAccesses = "ssg_ijssbccourtlocation_PrincipalObjectAttributeAccesses";
            public const string ssg_ijssbccourtlocation_ProcessSession = "ssg_ijssbccourtlocation_ProcessSession";
            public const string ssg_ijssbccourtlocation_SharePointDocumentLocations = "ssg_ijssbccourtlocation_SharePointDocumentLocations";
            public const string ssg_ijssbccourtlocation_SharePointDocuments = "ssg_ijssbccourtlocation_SharePointDocuments";
            public const string ssg_ijssbccourtlocation_ssg_csrsarchivedcourtfile_BCCourtLocation = "ssg_ijssbccourtlocation_ssg_csrsarchivedcourtfile_BCCourtLocation";
            public const string ssg_ijssbccourtlocation_ssg_csrsbccourtlocationcontact_BCCourtLocation = "ssg_ijssbccourtlocation_ssg_csrsbccourtlocationcontact_BCCourtLocation";
            public const string ssg_ijssbccourtlocation_ssg_csrsfile_BCCourtLocation = "ssg_ijssbccourtlocation_ssg_csrsfile_BCCourtLocation";
            public const string ssg_ijssbccourtlocation_ssg_ijssbccourtlocationcontact_BCCourtLocation = "ssg_ijssbccourtlocation_ssg_ijssbccourtlocationcontact_BCCourtLocation";
            public const string ssg_ijssbccourtlocation_ssg_ijsscourtorder_BCCourt = "ssg_ijssbccourtlocation_ssg_ijsscourtorder_BCCourt";
            public const string ssg_ijssbccourtlocation_ssg_ijssservicerequest_BCCourtLocation = "ssg_ijssbccourtlocation_ssg_ijssservicerequest_BCCourtLocation";
            public const string ssg_ijssbccourtlocation_SyncErrors = "ssg_ijssbccourtlocation_SyncErrors";
            public const string ssg_ijssbccourtlocation_UserEntityInstanceDatas = "ssg_ijssbccourtlocation_UserEntityInstanceDatas";
        }
        /// <summary>
        /// Contains all the attributes that represent a many to one relationship.
        /// These attributes will be a single instance on this entity.
        /// </summary>
        public static class ManyToOneRelationships
        {
            public const string business_unit_ssg_ijssbccourtlocation = "business_unit_ssg_ijssbccourtlocation";
            public const string lk_ssg_ijssbccourtlocation_createdby = "lk_ssg_ijssbccourtlocation_createdby";
            public const string lk_ssg_ijssbccourtlocation_createdonbehalfby = "lk_ssg_ijssbccourtlocation_createdonbehalfby";
            public const string lk_ssg_ijssbccourtlocation_modifiedby = "lk_ssg_ijssbccourtlocation_modifiedby";
            public const string lk_ssg_ijssbccourtlocation_modifiedonbehalfby = "lk_ssg_ijssbccourtlocation_modifiedonbehalfby";
            public const string owner_ssg_ijssbccourtlocation = "owner_ssg_ijssbccourtlocation";
            public const string ssg_csrsbccourtlevel_ssg_ijssbccourtlocation_CSRSCourtLevelFilter = "ssg_csrsbccourtlevel_ssg_ijssbccourtlocation_CSRSCourtLevelFilter";
            public const string ssg_ijsscountry_ssg_ijssbccourtlocation_Country = "ssg_ijsscountry_ssg_ijssbccourtlocation_Country";
            public const string team_ssg_ijssbccourtlocation = "team_ssg_ijssbccourtlocation";
            public const string user_ssg_ijssbccourtlocation = "user_ssg_ijssbccourtlocation";
        }
    }
}
