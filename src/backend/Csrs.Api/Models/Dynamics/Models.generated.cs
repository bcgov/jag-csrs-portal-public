//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
using System;
using System.Text.Json.Serialization;

#nullable enable

namespace Csrs.Api.Models.Dynamics
{
    public abstract class Entity
    {
        // TODO: fix to map to proper id field like default generated classes
        [JsonPropertyName("id")]
        public Guid? Id { get; set; }
    }

    // TODO: remove EntityReference and use POCO for related entity
    public class EntityReference
    {
        public EntityReference()
        {
        }
        public EntityReference(string logicalName, Guid id)
        {
            LogicalName = logicalName;
            Id = id;
        }
        [JsonPropertyName("id")]
        public Guid? Id { get; set; }
        [JsonPropertyName("logicalName")]
        public string? LogicalName { get; set; }
        [JsonPropertyName("name")]
        public string? Name { get; set; }
        [JsonPropertyName("rowVersion")]
        public string? RowVersion { get; set; }
    }

    public class Money
    {
        [JsonPropertyName("value")]
        public decimal Value { get; set; }
    }

    /// <summary>
    /// Logical name ssg_csrsfeedback.
    /// </summary>
    public partial class SSG_CsrsFeedback : Entity
    {
        /// <summary>
        /// Date and time when the record was created. Logical name createdon.
        /// </summary>
        [JsonPropertyName("createdon")]
        public DateTime? CreatedOn { get; set; }
        /// <summary>
        /// Date and time when the record was modified. Logical name modifiedon.
        /// </summary>
        [JsonPropertyName("modifiedon")]
        public DateTime? ModifiedOn { get; set; }
        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrsfeedbackid.
        /// </summary>
        [JsonPropertyName("ssg_csrsfeedbackid")]
        public System.Guid? FeedbackId { get; set; }
        /// <summary>
        /// Logical name ssg_csrsfeedbackmessage.
        /// </summary>
        [JsonPropertyName("ssg_csrsfeedbackmessage")]
        public string? Message { get; set; }
        /// <summary>
        /// Logical name ssg_csrsfeedbacksubject.
        /// </summary>
        [JsonPropertyName("ssg_csrsfeedbacksubject")]
        public string? Subject { get; set; }
        /// <summary>
        /// Logical name ssg_csrsparty.
        /// </summary>
        [JsonPropertyName("ssg_csrsparty")]
        public EntityReference? Party { get; set; }
        /// <summary>
        /// The name of the custom entity. Logical name ssg_name.
        /// </summary>
        [JsonPropertyName("ssg_name")]
        public string? Name { get; set; }
        /// <summary>
        /// Status of the Portal Feedback. Logical name statecode.
        /// </summary>
        [JsonPropertyName("statecode")]
        public int? StateCode { get; set; }
        /// <summary>
        /// Reason for the status of the Portal Feedback. Logical name statuscode.
        /// </summary>
        [JsonPropertyName("statuscode")]
        public int? StatusCode { get; set; }
    }

    /// <summary>
    /// Logical name ssg_csrsfile.
    /// </summary>
    public partial class SSG_CsrsFile : Entity
    {
        /// <summary>
        /// Date and time when the record was created. Logical name createdon.
        /// </summary>
        [JsonPropertyName("createdon")]
        public DateTime? CreatedOn { get; set; }
        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency. Logical name exchangerate.
        /// </summary>
        [JsonPropertyName("exchangerate")]
        public decimal? ExchangeRate { get; set; }
        /// <summary>
        /// Date and time when the record was modified. Logical name modifiedon.
        /// </summary>
        [JsonPropertyName("modifiedon")]
        public DateTime? ModifiedOn { get; set; }
        /// <summary>
        /// Auto Number to be copied to File Number. Do not delete. Logical name ssg_autonumber.
        /// </summary>
        [JsonPropertyName("ssg_autonumber")]
        public string? AutoNumber { get; set; }
        /// <summary>
        /// Select the level of court to filter the list of courts in the "Court Location" field. Logical name ssg_bccourtlevel.
        /// </summary>
        [JsonPropertyName("ssg_bccourtlevel")]
        public EntityReference? BCCourtLevel { get; set; }
        /// <summary>
        /// Select the BC Court registry for this File. Logical name ssg_bccourtlocation.
        /// </summary>
        [JsonPropertyName("ssg_bccourtlocation")]
        public EntityReference? BCCourtLocation { get; set; }
        /// <summary>
        /// Enter the amount for child support as specified on the order/WA. Logical name ssg_childsupportonorder.
        /// </summary>
        [JsonPropertyName("ssg_childsupportonorder")]
        public Money? ChildSupportonOrder { get; set; }
        /// <summary>
        /// Value of the Child Support on Order in base currency. Logical name ssg_childsupportonorder_base.
        /// </summary>
        [JsonPropertyName("ssg_childsupportonorder_base")]
        public Money? childsupportonorder_Base { get; set; }
        /// <summary>
        /// Logical name ssg_courtfilenumber.
        /// </summary>
        [JsonPropertyName("ssg_courtfilenumber")]
        public string? CourtFileNumber { get; set; }
        /// <summary>
        /// Specify the court that executed the Court Order or Written Agreement. Defaulted to "Kelowna". Logical name ssg_courtlocation.
        /// </summary>
        [JsonPropertyName("ssg_courtlocation")]
        public string? CourtLocation { get; set; }
        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrsfileid.
        /// </summary>
        [JsonPropertyName("ssg_csrsfileid")]
        public System.Guid? CsrsFileId { get; set; }
        /// <summary>
        /// Enter the date the Order or WA was issued. Logical name ssg_dateoforderorwa.
        /// </summary>
        [JsonPropertyName("ssg_dateoforderorwa")]
        public DateTime? DateofOrderorWA { get; set; }
        /// <summary>
        /// Specify the order commencement date. Logical name ssg_dateordercommences.
        /// </summary>
        [JsonPropertyName("ssg_dateordercommences")]
        public DateTime? DateOrderCommences { get; set; }
        /// <summary>
        /// The number ID for the file record. Logical name ssg_filenumber.
        /// </summary>
        [JsonPropertyName("ssg_filenumber")]
        public string? FileNumber { get; set; }
        /// <summary>
        /// Indicate whether the FMEP File is active or not. Logical name ssg_fmepfileactive.
        /// </summary>
        [JsonPropertyName("ssg_fmepfileactive")]
        public bool? FMEPFileActive { get; set; }
        /// <summary>
        /// Enter ID of the FMEP file number corresponding to this file. Logical name ssg_fmepfilenumber.
        /// </summary>
        [JsonPropertyName("ssg_fmepfilenumber")]
        public string? FMEPFileNumber { get; set; }
        /// <summary>
        /// Number of Recalculations for the File - Used for numbering File's Recalculations. Logical name ssg_numberofrecalculations.
        /// </summary>
        [JsonPropertyName("ssg_numberofrecalculations")]
        public int? NumberofRecalculations { get; set; }
        /// <summary>
        /// Select the party who provides (pays for) support. Logical name ssg_payor.
        /// </summary>
        [JsonPropertyName("ssg_payor")]
        public EntityReference? Payor { get; set; }
        /// <summary>
        /// Indicate whether the Recalculation was ordered by the court. Logical name ssg_recalculationorderedbythecourt.
        /// </summary>
        [JsonPropertyName("ssg_recalculationorderedbythecourt")]
        public bool? RecalculationOrderedbytheCourt { get; set; }
        /// <summary>
        /// Select the party who receives support. Logical name ssg_recipient.
        /// </summary>
        [JsonPropertyName("ssg_recipient")]
        public EntityReference? Recipient { get; set; }
        /// <summary>
        /// System-set indicator to allow capture of Recipient's Income on Recalculations. Logical name ssg_recipientsincomeneeded.
        /// </summary>
        [JsonPropertyName("ssg_recipientsincomeneeded")]
        public bool? RecipientsIncomeNeeded { get; set; }
        /// <summary>
        /// The registration date of the CSRS file. Logical name ssg_registrationdate.
        /// </summary>
        [JsonPropertyName("ssg_registrationdate")]
        public DateTime? RegistrationDate { get; set; }
        /// <summary>
        /// Indicate whether there is a Safety Alert applies to the file. Logical name ssg_safetyalert.
        /// </summary>
        [JsonPropertyName("ssg_safetyalert")]
        public bool? SafetyAlert { get; set; }
        /// <summary>
        /// Description of the Safety Concerns. Logical name ssg_safetyconcerndescription.
        /// </summary>
        [JsonPropertyName("ssg_safetyconcerndescription")]
        public string? SafetyConcernDescription { get; set; }
        /// <summary>
        /// Indicate whether the Section 7 expenses will be recalculated for the File. Logical name ssg_section7expensesrecalculated.
        /// </summary>
        [JsonPropertyName("ssg_section7expensesrecalculated")]
        public bool? Section7ExpensesRecalculated { get; set; }
        /// <summary>
        /// Amount of special expenses payable by the Payor. Logical name ssg_section7payorsamount.
        /// </summary>
        [JsonPropertyName("ssg_section7payorsamount")]
        public Money? Section7PayorsAmount { get; set; }
        /// <summary>
        /// Value of the Section 7 Payor's Amount in base currency. Logical name ssg_section7payorsamount_base.
        /// </summary>
        [JsonPropertyName("ssg_section7payorsamount_base")]
        public Money? section7payorsamount_Base { get; set; }
        /// <summary>
        /// Percentage of Section 7 Expenses payable by the Payor. Logical name ssg_section7payorsproportion.
        /// </summary>
        [JsonPropertyName("ssg_section7payorsproportion")]
        public int? Section7PayorsProportion { get; set; }
        /// <summary>
        /// Amount of special expenses payable by the Recipient. Logical name ssg_section7recipientsamount.
        /// </summary>
        [JsonPropertyName("ssg_section7recipientsamount")]
        public Money? Section7RecipientsAmount { get; set; }
        /// <summary>
        /// Value of the Section 7 Recipient's Amount in base currency. Logical name ssg_section7recipientsamount_base.
        /// </summary>
        [JsonPropertyName("ssg_section7recipientsamount_base")]
        public Money? section7recipientsamount_Base { get; set; }
        /// <summary>
        /// Percentage of Section 7 Expenses payable by the Recipient. Logical name ssg_section7recipientsproportion.
        /// </summary>
        [JsonPropertyName("ssg_section7recipientsproportion")]
        public int? Section7RecipientsProportion { get; set; }
        /// <summary>
        /// Total Amount of special expenses for the Court File. Logical name ssg_section7totalamount.
        /// </summary>
        [JsonPropertyName("ssg_section7totalamount")]
        public Money? Section7TotalAmount { get; set; }
        /// <summary>
        /// Value of the Section 7 Total Amount in base currency. Logical name ssg_section7totalamount_base.
        /// </summary>
        [JsonPropertyName("ssg_section7totalamount_base")]
        public Money? section7totalamount_Base { get; set; }
        /// <summary>
        /// Logical name ssg_sharedparenting.
        /// </summary>
        [JsonPropertyName("ssg_sharedparenting")]
        public bool? SharedParenting { get; set; }
        /// <summary>
        /// Date when Section 7 Expenses were withdrawn. Logical name ssg_specialexpenseswithdrawndate.
        /// </summary>
        [JsonPropertyName("ssg_specialexpenseswithdrawndate")]
        public DateTime? SpecialExpensesWithdrawnDate { get; set; }
        /// <summary>
        /// Specify whether the parents are sharing custody (parenting) of the child(ren). Logical name ssg_splitparentingarrangement.
        /// </summary>
        [JsonPropertyName("ssg_splitparentingarrangement")]
        public bool? SplitParentingArrangement { get; set; }
        /// <summary>
        /// Logical name ssg_styleofcauseapplicant.
        /// </summary>
        [JsonPropertyName("ssg_styleofcauseapplicant")]
        public string? StyleofCauseApplicant { get; set; }
        /// <summary>
        /// Logical name ssg_styleofcauserespondent.
        /// </summary>
        [JsonPropertyName("ssg_styleofcauserespondent")]
        public string? StyleofCauseRespondent { get; set; }
        /// <summary>
        /// Date/time the application or file was first submitted to the Program. Logical name ssg_submissiondate.
        /// </summary>
        [JsonPropertyName("ssg_submissiondate")]
        public DateTime? SubmissionDate { get; set; }
        /// <summary>
        /// Date when the File's state is set to "Inactive". Logical name ssg_terminationdate.
        /// </summary>
        [JsonPropertyName("ssg_terminationdate")]
        public DateTime? TerminationDate { get; set; }
        /// <summary>
        /// Status of the CSRS File. Logical name statecode.
        /// </summary>
        [JsonPropertyName("statecode")]
        public int? StateCode { get; set; }
        /// <summary>
        /// Reason for the status of the CSRS File. Logical name statuscode.
        /// </summary>
        [JsonPropertyName("statuscode")]
        public int? StatusCode { get; set; }
        /// <summary>
        /// Unique identifier of the currency associated with the entity. Logical name transactioncurrencyid.
        /// </summary>
        [JsonPropertyName("transactioncurrencyid")]
        public EntityReference? TransactionCurrencyId { get; set; }
    }

    /// <summary>
    /// Child Support Recalculation System parties. Logical name ssg_csrsparty.
    /// </summary>
    public partial class SSG_CsrsParty : Entity
    {
        /// <summary>
        /// Date and time when the record was created. Logical name createdon.
        /// </summary>
        [JsonPropertyName("createdon")]
        public DateTime? CreatedOn { get; set; }
        /// <summary>
        /// Date and time when the record was modified. Logical name modifiedon.
        /// </summary>
        [JsonPropertyName("modifiedon")]
        public DateTime? ModifiedOn { get; set; }
        /// <summary>
        /// Logical name ssg_areapostalcode.
        /// </summary>
        [JsonPropertyName("ssg_areapostalcode")]
        public string? PostalCode { get; set; }
        /// <summary>
        /// Logical name ssg_bceid_displayname.
        /// </summary>
        [JsonPropertyName("ssg_bceid_displayname")]
        public string? BCeIDDisplayName { get; set; }
        /// <summary>
        /// Logical name ssg_bceid_guid.
        /// </summary>
        [JsonPropertyName("ssg_bceid_guid")]
        public string? BCeIDGuid { get; set; }
        /// <summary>
        /// Timestamp for the last update of BCeID GUID. Logical name ssg_bceid_last_update.
        /// </summary>
        [JsonPropertyName("ssg_bceid_last_update")]
        public DateTime? BCeID_Last_Update { get; set; }
        /// <summary>
        /// Logical name ssg_bceid_userid.
        /// </summary>
        [JsonPropertyName("ssg_bceid_userid")]
        public string? BCeID_UserId { get; set; }
        /// <summary>
        /// Logical name ssg_cellphone.
        /// </summary>
        [JsonPropertyName("ssg_cellphone")]
        public string? CellPhone { get; set; }
        /// <summary>
        /// Party's city of residence. Logical name ssg_city.
        /// </summary>
        [JsonPropertyName("ssg_city")]
        public string? City { get; set; }
        /// <summary>
        /// Logical name ssg_csrsoptoutedocuments.
        /// </summary>
        [JsonPropertyName("ssg_csrsoptoutedocuments")]
        public bool? csrsOptoutEDocuments { get; set; }
        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrspartyid.
        /// </summary>
        [JsonPropertyName("ssg_csrspartyid")]
        public System.Guid? PartyId { get; set; }
        /// <summary>
        /// Logical name ssg_dateofbirth.
        /// </summary>
        [JsonPropertyName("ssg_dateofbirth")]
        public DateTime? DateofBirth { get; set; }
        /// <summary>
        /// Logical name ssg_email.
        /// </summary>
        [JsonPropertyName("ssg_email")]
        public string? Email { get; set; }
        /// <summary>
        /// Logical name ssg_firstname.
        /// </summary>
        [JsonPropertyName("ssg_firstname")]
        public string? FirstName { get; set; }
        /// <summary>
        /// The full name of the party. Logical name ssg_fullname.
        /// </summary>
        [JsonPropertyName("ssg_fullname")]
        public string? FullName { get; set; }
        /// <summary>
        /// Logical name ssg_homephone.
        /// </summary>
        [JsonPropertyName("ssg_homephone")]
        public string? HomePhone { get; set; }
        /// <summary>
        /// Capture "Other" details regarding the Party's Identity. Logical name ssg_identityotherdetails.
        /// </summary>
        [JsonPropertyName("ssg_identityotherdetails")]
        public string? IdentityOtherDetails { get; set; }
        /// <summary>
        /// Logical name ssg_lastname.
        /// </summary>
        [JsonPropertyName("ssg_lastname")]
        public string? LastName { get; set; }
        /// <summary>
        /// Logical name ssg_middlename.
        /// </summary>
        [JsonPropertyName("ssg_middlename")]
        public string? MiddleName { get; set; }
        /// <summary>
        /// Determines If the user access is enabled or disabled to the portal. Logical name ssg_portalaccess.
        /// </summary>
        [JsonPropertyName("ssg_portalaccess")]
        public bool? PortalAccess { get; set; }
        /// <summary>
        /// Enter the preferred name for the Party. Logical name ssg_preferredname.
        /// </summary>
        [JsonPropertyName("ssg_preferredname")]
        public string? PreferredName { get; set; }
        /// <summary>
        /// to be deleted. Logical name ssg_stagingfilenumber.
        /// </summary>
        [JsonPropertyName("ssg_stagingfilenumber")]
        public int? StagingFileNumber { get; set; }
        /// <summary>
        /// Logical name ssg_stagingid.
        /// </summary>
        [JsonPropertyName("ssg_stagingid")]
        public int? StagingId { get; set; }
        /// <summary>
        /// First line of the Party's street address. Logical name ssg_street1.
        /// </summary>
        [JsonPropertyName("ssg_street1")]
        public string? AddressStreet1 { get; set; }
        /// <summary>
        /// Additional details for the Party's street address (for unit #, floor, buzzer #, etc). Logical name ssg_street2.
        /// </summary>
        [JsonPropertyName("ssg_street2")]
        public string? AddressStreet2 { get; set; }
        /// <summary>
        /// Logical name ssg_workphone.
        /// </summary>
        [JsonPropertyName("ssg_workphone")]
        public string? WorkPhone { get; set; }
        /// <summary>
        /// Status of the CSRS Party. Logical name statecode.
        /// </summary>
        [JsonPropertyName("statecode")]
        public int? StateCode { get; set; }
        /// <summary>
        /// Reason for the status of the CSRS Party. Logical name statuscode.
        /// </summary>
        [JsonPropertyName("statuscode")]
        public int? StatusCode { get; set; }
    }

    /// <summary>
    /// Logical name ssg_csrsportalmessage.
    /// </summary>
    public partial class SSG_CsrsPortalMessage : Entity
    {
        /// <summary>
        /// Date and time when the record was created. Logical name createdon.
        /// </summary>
        [JsonPropertyName("createdon")]
        public DateTime? CreatedOn { get; set; }
        /// <summary>
        /// Date and time when the record was modified. Logical name modifiedon.
        /// </summary>
        [JsonPropertyName("modifiedon")]
        public DateTime? ModifiedOn { get; set; }
        /// <summary>
        /// Logical name ssg_csrsfile.
        /// </summary>
        [JsonPropertyName("ssg_csrsfile")]
        public EntityReference? File { get; set; }
        /// <summary>
        /// Logical name ssg_csrsmessageattachment.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessageattachment")]
        public bool? HasAttachment { get; set; }
        /// <summary>
        /// Logical name ssg_csrsmessagedate.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessagedate")]
        public DateTime? Date { get; set; }
        /// <summary>
        /// Logical name ssg_csrsmessageread.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessageread")]
        public bool? Read { get; set; }
        /// <summary>
        /// Logical name ssg_csrsmessagesubject.
        /// </summary>
        [JsonPropertyName("ssg_csrsmessagesubject")]
        public string? Subject { get; set; }
        /// <summary>
        /// Unique identifier for entity instances. Logical name ssg_csrsportalmessageid.
        /// </summary>
        [JsonPropertyName("ssg_csrsportalmessageid")]
        public System.Guid? MessageId { get; set; }
        /// <summary>
        /// The name of the custom entity. Logical name ssg_name.
        /// </summary>
        [JsonPropertyName("ssg_name")]
        public string? Name { get; set; }
        /// <summary>
        /// Status of the CSRS Portal Message. Logical name statecode.
        /// </summary>
        [JsonPropertyName("statecode")]
        public int? StateCode { get; set; }
        /// <summary>
        /// Reason for the status of the CSRS Portal Message. Logical name statuscode.
        /// </summary>
        [JsonPropertyName("statuscode")]
        public int? StatusCode { get; set; }
    }
}
