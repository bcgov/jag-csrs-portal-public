# This is the main workflow that creates a new image 


name: Main - Build Image and Push to Openshift Registry for Dev Deployment

# Controls when the workflow will run
on:
  push:
    branches:
      - 'portal_build_deploy'
  pull_request:
    branches:
      - 'main'    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        app:
            description: 'App Name (jag-csrs-portal-public)'    
            required: true
            default: jag_csrs
        env:
            description: 'Image Target Env'     
            required: true
            default: 'dev'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-push-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.env }}
    env:
      BASIC_AUTH_USER: ${{ secrets.BASIC_AUTH_USER }}
      BASIC_AUTH_PASS: ${{ secrets.BASIC_AUTH_PASS }}
      app: ${{github.event.inputs.app}}
      env: ${{github.event.inputs.env}}
      app_from_gh_secret: ${{ secrets.APP_NAME }}
      env_from_gh_secret: ${{secrets.OPENSHIFT_ENV_TAG}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git Checkout
        uses: actions/checkout@v2
      
      # Get the version number which is prefixed with the Github release branches in format release/{version}
      - name: Get Release Version
        run: |
          branch=${GITHUB_REF##*/}
          version=$(echo $branch | cut -d "/" -f2-)
          echo "releaseVersion=$version" >> $GITHUB_ENV
      
      # Get Git latest short Sha# from the release branch used. This Sha# will be used in image tagging as well as DC Pod labelling.
      - name: Get git commit short sha
        id: sha
        run: |
          shortSha=$(echo $(git rev-parse --short HEAD) | cut -c1-7)
          echo "gitsha=$shortSha" >> $GITHUB_ENV
      
      - name: env variables

        run: |

          if ["$app" == ""]; then
            echo "app=$app_from_gh_secret"
            app=$app_from_gh_secret
          fi  
          echo "app=$app" >> $GITHUB_ENV
          if ["$env" == ""]; then
            echo "env=$env_from_gh_secret"
            env=$env_from_gh_secret
          fi  
          echo "env=$env" >> $GITHUB_ENV

          echo "Release Application: ${{ env.app }}"
          echo "Release Environment: ${{ env.env }}"
          echo "Release Version: ${{ env.releaseVersion }}"
          echo "Release Git Sha: ${{env.gitsha}}"
