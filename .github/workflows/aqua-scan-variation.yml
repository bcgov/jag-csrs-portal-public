# https://github.com/marketplace/actions/openshift-self-hosted-runner-installer
# https://developers.redhat.com/articles/2021/06/16/deploy-self-hosted-github-actions-runners-red-hat-openshift
# Working fine (GitHub Hosted Runner based variation)
name: Trivy Scan All ENVS
on:
  schedule:
  #  # Experimental schedule;
  #  # 10:15 pm PST Tuesday ---> 6:15 AM UTC Wednesday
    - cron:  '15 06 * * 3'
  push:
    branches:
      improving_infra_v2
  workflow_dispatch:
jobs:
  build:
    runs-on: "ubuntu-latest"
    # https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
    permissions:
      # required for all workflows
      security-events: write
    steps:
      # Login to Openshift using OpenShift SA and Token of respective env (for test the images are in Tools space).
      # So we are using the service accounts credentials from tools space that is in GitHub too
      - name: Authenticate OC Env Specific SA
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_NAMESPACE: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools
          username: ${{secrets.SA_GITHUB_ACTIONS}}
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL}}
          openshift_token: ${{secrets.SA_GITHUB_ACTIONS_TOKEN}}
          namespace:  ${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools

      # Scanning the Deployed Images in Test
      # Reference: https://github.com/aquasecurity/trivy-action
      - name: TEST - Run Trivy vulnerability scanner on frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/jag-csrs-frontend:test'
          format: 'sarif'
          output: 'trivy-results-frontend.sarif'
          #exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          # For troubleshooting
          severity: 'CRITICAL,HIGH,MEDIUM'
        env:
          TRIVY_USERNAME:  ${{secrets.SA_GITHUB_ACTIONS}}
          TRIVY_PASSWORD: ${{secrets.SA_GITHUB_ACTIONS_TOKEN}}

      # https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
      # https://github.com/github/codeql-action/issues/944
      # This upload works fine
      # Artifact appears at the bottom of workflow execution report
      - name: TEST - Upload Artifact for Frontend
        uses: actions/upload-artifact@v2
        with:
          name: frontend-scan-artifact-test
          path: 'trivy-results-frontend.sarif'
          retention-days: 15


      - name: TEST - Run Trivy vulnerability scanner on API
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/jag-csrs-api:test'
          format: 'sarif'
          output: 'trivy-results-api.sarif'
          #exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #For troubleshooting
          severity: 'CRITICAL,HIGH,MEDIUM'
        env:
          TRIVY_USERNAME:  ${{secrets.SA_GITHUB_ACTIONS}}
          TRIVY_PASSWORD: ${{secrets.SA_GITHUB_ACTIONS_TOKEN}}

      - name: TEST - Upload Artifact for API
        uses: actions/upload-artifact@v2
        with:
          name: api-scan-artifact-test
          path: 'trivy-results-api.sarif'
          retention-days: 15

      - name: TEST - Run Trivy vulnerability scanner on File Manager
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/jag-csrs-file-manager:test'
          format: 'sarif'
          output: 'trivy-results-file-manager.sarif'
          #exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #For troubleshooting
          severity: 'CRITICAL,HIGH,MEDIUM'
        env:
          TRIVY_USERNAME:  ${{secrets.SA_GITHUB_ACTIONS}}
          TRIVY_PASSWORD: ${{secrets.SA_GITHUB_ACTIONS_TOKEN}}

      - name: TEST - Upload Artifact for File Manager
        uses: actions/upload-artifact@v2
        with:
          name: file-manager-scan-artifact-test
          path: 'trivy-results-file-manager.sarif'
          retention-days: 15

      ##############################################################################################

      # Login to Openshift using OpenShift SA and Token of respective env (for test the images are in dev space).
      # This is because when we worked for DEV env we didnot have enough privilege to do role bidnding to enable pulling image to dev 
      # from tools space
      - name: Authenticate OC Env Specific SA
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_NAMESPACE: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-dev
          username: ${{secrets.SA_GITHUB_ACTIONS_DEV}}
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL}}
          openshift_token: ${{secrets.SA_GITHUB_ACTIONS_TOKEN_DEV}}
          namespace:  ${OPENSHIFT_NAMESPACE}}

      # Scanning the Deployed Images in Dev
      - name: DEV - Run Trivy vulnerability scanner on frontend
        uses: aquasecurity/trivy-action@master
        with:
        # Looking for dev images in dev space. This is because when we originally started working we did not have enough permission
        # to do  role binding to enable from dev env access of image in tools space.
        # Finally we got proper permission but it is little late in the process to do the rewrite/cleanup until more pressing issues
        # are fixed.
          image-ref: '${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-dev/jag-csrs-frontend:dev'
          format: 'sarif'
          output: 'trivy-results-frontend.sarif'
          #exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #For troubleshooting
          severity: 'CRITICAL,HIGH,MEDIUM'
        env:
          TRIVY_USERNAME:  ${{secrets.SA_GITHUB_ACTIONS_DEV}}
          TRIVY_PASSWORD: ${{secrets.SA_GITHUB_ACTIONS_TOKEN_DEV}}

      - name: DEV - Upload Artifact for Frontend
        uses: actions/upload-artifact@v2
        with:
          name: frontend-scan-artifact-dev
          path: 'trivy-results-frontend.sarif'
          retention-days: 15

      - name: DEV - Run Trivy vulnerability scanner on API
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-dev/jag-csrs-api:dev'
          format: 'sarif'
          output: 'trivy-results-api.sarif'
          #exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #For troubleshooting
          severity: 'CRITICAL,HIGH,MEDIUM'
        env:
          TRIVY_USERNAME:  ${{secrets.SA_GITHUB_ACTIONS_DEV}}
          TRIVY_PASSWORD: ${{secrets.SA_GITHUB_ACTIONS_TOKEN_DEV}}

      - name: 'DEV - Upload Artifact for API'
        uses: actions/upload-artifact@v2
        with:
          name: api-scan-artifact-dev
          path: 'trivy-results-api.sarif'
          retention-days: 15

      - name: DEV - Run Trivy vulnerability scanner on File Manager
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-dev/jag-csrs-file-manager:dev'
          format: 'sarif'
          output: 'trivy-results-file-manageri.sarif'
          #exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #For troubleshooting
          severity: 'CRITICAL,HIGH,MEDIUM'
        env:
          TRIVY_USERNAME:  ${{secrets.SA_GITHUB_ACTIONS_DEV}}
          TRIVY_PASSWORD: ${{secrets.SA_GITHUB_ACTIONS_TOKEN_DEV}}

      - name: 'DEV - Upload Artifact for File Manager'
        uses: actions/upload-artifact@v2
        with:
          name: file-manager-scan-artifact-dev
          path: 'trivy-results-file-manager.sarif'
          retention-days: 15

      ##############################################################################################

      # Scanning the Deployed Images in prod
      # Yet to Add
